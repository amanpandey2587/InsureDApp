{"id":"f9e81c3d297e84ac772e959614a8169b","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/HealthInsurance.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract HealthInsurance is Ownable, ReentrancyGuard {\n    // Struct to represent an insurance policy\n    struct Policy {\n        uint256 id;\n        address policyholder;\n        uint256 coverageAmount;\n        uint256 premium;\n        uint256 startDate;\n        uint256 endDate;\n        bool isActive;\n    }\n\n    // Struct to represent a claim\n    struct Claim {\n        uint256 id;\n        uint256 policyId;\n        uint256 claimAmount;\n        uint256 submissionDate;\n        ClaimStatus status;\n        string medicalDocuments;\n    }\n\n    // Enum for claim status\n    enum ClaimStatus {\n        Pending,\n        Approved,\n        Rejected\n    }\n\n    // Mappings\n    mapping(address => Policy[]) public userPolicies;\n    mapping(uint256 => Claim) public claims;\n    mapping(address => uint256[]) public userClaims;\n\n    // Policy and Claim Counters\n    uint256 public policyCounter;\n    uint256 public claimCounter;\n\n    // Insurance plan details\n    uint256 public constant MIN_COVERAGE = 10000 * 10**18; // 10,000 USDC\n    uint256 public constant MAX_COVERAGE = 1000000 * 10**18; // 1,000,000 USDC\n    uint256 public constant MIN_PREMIUM_PERCENTAGE = 5; // 5%\n    uint256 public constant MAX_PREMIUM_PERCENTAGE = 20; // 20%\n\n    // Events\n    event PolicyPurchased(\n        address indexed policyholder, \n        uint256 indexed policyId, \n        uint256 coverageAmount, \n        uint256 premium\n    );\n    event ClaimSubmitted(\n        address indexed policyholder, \n        uint256 indexed claimId, \n        uint256 claimAmount\n    );\n    event ClaimProcessed(\n        uint256 indexed claimId, \n        ClaimStatus status\n    );\n\n    // Purchase a new health insurance policy\n    function purchasePolicy(uint256 coverageAmount) external payable nonReentrant {\n        // Validate coverage amount\n        require(\n            coverageAmount >= MIN_COVERAGE && \n            coverageAmount <= MAX_COVERAGE, \n            \"Invalid coverage amount\"\n        );\n\n        // Calculate premium (simplified calculation)\n        uint256 premium = calculatePremium(coverageAmount);\n        require(msg.value >= premium, \"Insufficient premium payment\");\n\n        // Create new policy\n        Policy memory newPolicy = Policy({\n            id: policyCounter,\n            policyholder: msg.sender,\n            coverageAmount: coverageAmount,\n            premium: premium,\n            startDate: block.timestamp,\n            endDate: block.timestamp + 365 days, // 1 year policy\n            isActive: true\n        });\n\n        // Store policy\n        userPolicies[msg.sender].push(newPolicy);\n        policyCounter++;\n\n        // Emit event\n        emit PolicyPurchased(msg.sender, newPolicy.id, coverageAmount, premium);\n\n        // Refund excess payment\n        if (msg.value > premium) {\n            payable(msg.sender).transfer(msg.value - premium);\n        }\n    }\n\n    // Submit a claim\n    function submitClaim(\n        uint256 policyId, \n        uint256 claimAmount, \n        string memory medicalDocuments\n    ) external nonReentrant {\n        // Find the policy\n        Policy storage policy = _findUserPolicy(policyId);\n        \n        // Validate claim\n        require(policy.isActive, \"Policy is not active\");\n        require(\n            claimAmount <= policy.coverageAmount, \n            \"Claim amount exceeds coverage\"\n        );\n\n        // Create claim\n        Claim memory newClaim = Claim({\n            id: claimCounter,\n            policyId: policyId,\n            claimAmount: claimAmount,\n            submissionDate: block.timestamp,\n            status: ClaimStatus.Pending,\n            medicalDocuments: medicalDocuments\n        });\n\n        // Store claim\n        claims[claimCounter] = newClaim;\n        userClaims[msg.sender].push(claimCounter);\n        claimCounter++;\n\n        // Emit event\n        emit ClaimSubmitted(msg.sender, newClaim.id, claimAmount);\n    }\n\n    // Process a claim (only by owner/admin)\n    function processClaim(\n        uint256 claimId, \n        bool approve\n    ) external onlyOwner nonReentrant {\n        Claim storage claim = claims[claimId];\n        Policy storage policy = _findUserPolicy(claim.policyId);\n\n        require(claim.status == ClaimStatus.Pending, \"Claim already processed\");\n\n        if (approve) {\n            claim.status = ClaimStatus.Approved;\n            // Transfer claim amount to policyholder\n            payable(policy.policyholder).transfer(claim.claimAmount);\n        } else {\n            claim.status = ClaimStatus.Rejected;\n        }\n\n        // Emit event\n        emit ClaimProcessed(claimId, claim.status);\n    }\n\n    // Internal function to find user's policy\n    function _findUserPolicy(\n        uint256 policyId\n    ) internal view returns (Policy storage) {\n        Policy[] storage policies = userPolicies[msg.sender];\n        for (uint256 i = 0; i < policies.length; i++) {\n            if (policies[i].id == policyId) {\n                return policies[i];\n            }\n        }\n        revert(\"Policy not found\");\n    }\n\n    // Calculate premium based on coverage amount\n    function calculatePremium(\n        uint256 coverageAmount\n    ) internal pure returns (uint256) {\n        // Simplified premium calculation\n        // Premium is between 5-20% of coverage amount\n        uint256 premiumPercentage = MIN_PREMIUM_PERCENTAGE + \n            ((coverageAmount * (MAX_PREMIUM_PERCENTAGE - MIN_PREMIUM_PERCENTAGE)) / MAX_COVERAGE);\n        \n        return (coverageAmount * premiumPercentage) / 100;\n    }\n\n    // Withdraw contract balance (only owner)\n    function withdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    // Fallback and receive functions\n    receive() external payable {}\n    fallback() external payable {}\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[166],"Ownable":[104]},"id":105,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":167,"src":"112:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":166,"src":"668:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"668:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"144:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":104,"linearizedBaseContracts":[104,166],"name":"Ownable","nameLocation":"657:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"698:6:0","nodeType":"VariableDeclaration","scope":104,"src":"682:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"717:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"754:13:0","nodeType":"VariableDeclaration","scope":13,"src":"738:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"785:8:0","nodeType":"VariableDeclaration","scope":13,"src":"769:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:57:0"},"src":"711:84:0"},{"body":{"id":22,"nodeType":"Block","src":"911:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"940:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"940:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"921:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"921:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"801:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"908:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"911:0:0"},"scope":104,"src":"897:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"1091:30:0","statements":[{"expression":{"id":29,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1108:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":28,"id":30,"nodeType":"Return","src":"1101:13:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"966:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":32,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1045:5:0","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1050:2:0"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32,"src":"1082:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:9:0"},"scope":104,"src":"1036:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":45,"nodeType":"Block","src":"1230:96:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":36,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1248:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1248:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1259:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":35,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1240:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1240:68:0"},{"id":44,"nodeType":"PlaceholderStatement","src":"1318:1:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1127:77:0","text":" @dev Throws if called by any account other than the owner."},"id":46,"name":"onlyOwner","nameLocation":"1218:9:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"1227:2:0"},"src":"1209:117:0","virtual":false,"visibility":"internal"},{"body":{"id":59,"nodeType":"Block","src":"1722:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1751:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:0","typeDescriptions":{}}},"id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1751:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":52,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1732:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1732:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":58,"nodeType":"ExpressionStatement","src":"1732:30:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1332:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":60,"implemented":true,"kind":"function","modifiers":[{"id":50,"kind":"modifierInvocation","modifierName":{"id":49,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1712:9:0"},"nodeType":"ModifierInvocation","src":"1712:9:0"}],"name":"renounceOwnership","nameLocation":"1677:17:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1694:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[],"src":"1722:0:0"},"scope":104,"src":"1668:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":82,"nodeType":"Block","src":"1988:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":69,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":71,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:0","typeDescriptions":{}}},"id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2030:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":68,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1998:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1998:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77,"nodeType":"ExpressionStatement","src":"1998:73:0"},{"expression":{"arguments":[{"id":79,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2100:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":78,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"2081:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2081:28:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1775:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":83,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1978:9:0"},"nodeType":"ModifierInvocation","src":"1978:9:0"}],"name":"transferOwnership","nameLocation":"1927:17:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"newOwner","nameLocation":"1953:8:0","nodeType":"VariableDeclaration","scope":83,"src":"1945:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:18:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"1988:0:0"},"scope":104,"src":"1918:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":102,"nodeType":"Block","src":"2333:124:0","statements":[{"assignments":[90],"declarations":[{"constant":false,"id":90,"mutability":"mutable","name":"oldOwner","nameLocation":"2351:8:0","nodeType":"VariableDeclaration","scope":102,"src":"2343:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":92,"initialValue":{"id":91,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2362:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2343:25:0"},{"expression":{"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":93,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2378:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":94,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2387:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":96,"nodeType":"ExpressionStatement","src":"2378:17:0"},{"eventCall":{"arguments":[{"id":98,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2431:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":99,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2441:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":97,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2410:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2410:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"EmitStatement","src":"2405:45:0"}]},"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2122:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":103,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2279:18:0","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"newOwner","nameLocation":"2306:8:0","nodeType":"VariableDeclaration","scope":103,"src":"2298:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:18:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"2333:0:0"},"scope":104,"src":"2270:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":105,"src":"639:1820:0","usedErrors":[]}],"src":"87:2373:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[144]},"id":145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":106,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:1"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"122:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":144,"linearizedBaseContracts":[144],"name":"ReentrancyGuard","nameLocation":"891:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":110,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1686:12:1","nodeType":"VariableDeclaration","scope":144,"src":"1661:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":113,"mutability":"constant","name":"_ENTERED","nameLocation":"1733:8:1","nodeType":"VariableDeclaration","scope":144,"src":"1708:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":115,"mutability":"mutable","name":"_status","nameLocation":"1768:7:1","nodeType":"VariableDeclaration","scope":144,"src":"1752:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":122,"nodeType":"Block","src":"1796:39:1","statements":[{"expression":{"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":118,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1806:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":119,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"1816:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":121,"nodeType":"ExpressionStatement","src":"1806:22:1"}]},"id":123,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"1793:2:1"},"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"1796:0:1"},"scope":144,"src":"1782:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":142,"nodeType":"Block","src":"2236:421:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":127,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2325:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":128,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2336:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":126,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2317:63:1"},{"expression":{"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":133,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2455:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":134,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2465:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":136,"nodeType":"ExpressionStatement","src":"2455:18:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2484:1:1"},{"expression":{"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":138,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2628:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":139,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"2638:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":141,"nodeType":"ExpressionStatement","src":"2628:22:1"}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"1841:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":143,"name":"nonReentrant","nameLocation":"2221:12:1","nodeType":"ModifierDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"2233:2:1"},"src":"2212:445:1","virtual":false,"visibility":"internal"}],"scope":145,"src":"873:1786:1","usedErrors":[]}],"src":"97:2563:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[166]},"id":167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":146,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":166,"linearizedBaseContracts":[166],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":155,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":152,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":151,"id":154,"nodeType":"Return","src":"712:17:2"}]},"id":156,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":156,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":166,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":164,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":161,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":160,"id":163,"nodeType":"Return","src":"819:15:2"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":158,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":166,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":167,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"contracts/HealthInsurance.sol":{"ast":{"absolutePath":"contracts/HealthInsurance.sol","exportedSymbols":{"Context":[166],"HealthInsurance":[609],"Ownable":[104],"ReentrancyGuard":[144]},"id":610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":168,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":610,"sourceUnit":105,"src":"57:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":610,"sourceUnit":145,"src":"110:62:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":171,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":104,"src":"202:7:3"},"id":172,"nodeType":"InheritanceSpecifier","src":"202:7:3"},{"baseName":{"id":173,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":144,"src":"211:15:3"},"id":174,"nodeType":"InheritanceSpecifier","src":"211:15:3"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":609,"linearizedBaseContracts":[609,144,104,166],"name":"HealthInsurance","nameLocation":"183:15:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"HealthInsurance.Policy","id":189,"members":[{"constant":false,"id":176,"mutability":"mutable","name":"id","nameLocation":"312:2:3","nodeType":"VariableDeclaration","scope":189,"src":"304:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"304:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"policyholder","nameLocation":"332:12:3","nodeType":"VariableDeclaration","scope":189,"src":"324:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"324:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"coverageAmount","nameLocation":"362:14:3","nodeType":"VariableDeclaration","scope":189,"src":"354:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"premium","nameLocation":"394:7:3","nodeType":"VariableDeclaration","scope":189,"src":"386:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"386:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"startDate","nameLocation":"419:9:3","nodeType":"VariableDeclaration","scope":189,"src":"411:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"411:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"endDate","nameLocation":"446:7:3","nodeType":"VariableDeclaration","scope":189,"src":"438:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"isActive","nameLocation":"468:8:3","nodeType":"VariableDeclaration","scope":189,"src":"463:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":187,"name":"bool","nodeType":"ElementaryTypeName","src":"463:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Policy","nameLocation":"287:6:3","nodeType":"StructDefinition","scope":609,"src":"280:203:3","visibility":"public"},{"canonicalName":"HealthInsurance.Claim","id":203,"members":[{"constant":false,"id":191,"mutability":"mutable","name":"id","nameLocation":"555:2:3","nodeType":"VariableDeclaration","scope":203,"src":"547:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"policyId","nameLocation":"575:8:3","nodeType":"VariableDeclaration","scope":203,"src":"567:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"claimAmount","nameLocation":"601:11:3","nodeType":"VariableDeclaration","scope":203,"src":"593:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"submissionDate","nameLocation":"630:14:3","nodeType":"VariableDeclaration","scope":203,"src":"622:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"status","nameLocation":"666:6:3","nodeType":"VariableDeclaration","scope":203,"src":"654:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"},"typeName":{"id":199,"nodeType":"UserDefinedTypeName","pathNode":{"id":198,"name":"ClaimStatus","nodeType":"IdentifierPath","referencedDeclaration":207,"src":"654:11:3"},"referencedDeclaration":207,"src":"654:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"medicalDocuments","nameLocation":"689:16:3","nodeType":"VariableDeclaration","scope":203,"src":"682:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":201,"name":"string","nodeType":"ElementaryTypeName","src":"682:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Claim","nameLocation":"531:5:3","nodeType":"StructDefinition","scope":609,"src":"524:188:3","visibility":"public"},{"canonicalName":"HealthInsurance.ClaimStatus","id":207,"members":[{"id":204,"name":"Pending","nameLocation":"774:7:3","nodeType":"EnumValue","src":"774:7:3"},{"id":205,"name":"Approved","nameLocation":"791:8:3","nodeType":"EnumValue","src":"791:8:3"},{"id":206,"name":"Rejected","nameLocation":"809:8:3","nodeType":"EnumValue","src":"809:8:3"}],"name":"ClaimStatus","nameLocation":"752:11:3","nodeType":"EnumDefinition","src":"747:76:3"},{"constant":false,"functionSelector":"3d36adc5","id":213,"mutability":"mutable","name":"userPolicies","nameLocation":"881:12:3","nodeType":"VariableDeclaration","scope":609,"src":"845:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Policy_$189_storage_$dyn_storage_$","typeString":"mapping(address => struct HealthInsurance.Policy[])"},"typeName":{"id":212,"keyType":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"845:28:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Policy_$189_storage_$dyn_storage_$","typeString":"mapping(address => struct HealthInsurance.Policy[])"},"valueType":{"baseType":{"id":210,"nodeType":"UserDefinedTypeName","pathNode":{"id":209,"name":"Policy","nodeType":"IdentifierPath","referencedDeclaration":189,"src":"864:6:3"},"referencedDeclaration":189,"src":"864:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"}},"id":211,"nodeType":"ArrayTypeName","src":"864:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Policy_$189_storage_$dyn_storage_ptr","typeString":"struct HealthInsurance.Policy[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a888c2cd","id":218,"mutability":"mutable","name":"claims","nameLocation":"932:6:3","nodeType":"VariableDeclaration","scope":609,"src":"899:39:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$203_storage_$","typeString":"mapping(uint256 => struct HealthInsurance.Claim)"},"typeName":{"id":217,"keyType":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"899:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$203_storage_$","typeString":"mapping(uint256 => struct HealthInsurance.Claim)"},"valueType":{"id":216,"nodeType":"UserDefinedTypeName","pathNode":{"id":215,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"918:5:3"},"referencedDeclaration":203,"src":"918:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim"}}},"visibility":"public"},{"constant":false,"functionSelector":"ca9748ea","id":223,"mutability":"mutable","name":"userClaims","nameLocation":"981:10:3","nodeType":"VariableDeclaration","scope":609,"src":"944:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":222,"keyType":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"952:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"944:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":221,"nodeType":"ArrayTypeName","src":"963:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"d52c1bea","id":225,"mutability":"mutable","name":"policyCounter","nameLocation":"1046:13:3","nodeType":"VariableDeclaration","scope":609,"src":"1031:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1031:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4efa8f17","id":227,"mutability":"mutable","name":"claimCounter","nameLocation":"1080:12:3","nodeType":"VariableDeclaration","scope":609,"src":"1065:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1065:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"2925993d","id":234,"mutability":"constant","name":"MIN_COVERAGE","nameLocation":"1153:12:3","nodeType":"VariableDeclaration","scope":609,"src":"1129:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1129:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000_by_1","typeString":"int_const 10000000000000000000000"},"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130303030","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1168:5:3","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1176:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1180:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1176:6:3","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1168:14:3","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000_by_1","typeString":"int_const 10000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"9efa0aa9","id":241,"mutability":"constant","name":"MAX_COVERAGE","nameLocation":"1227:12:3","nodeType":"VariableDeclaration","scope":609,"src":"1203:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1242:7:3","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1252:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1256:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1252:6:3","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1242:16:3","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"4b930487","id":244,"mutability":"constant","name":"MIN_PREMIUM_PERCENTAGE","nameLocation":"1306:22:3","nodeType":"VariableDeclaration","scope":609,"src":"1282:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1282:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1331:1:3","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"5eff1735","id":247,"mutability":"constant","name":"MAX_PREMIUM_PERCENTAGE","nameLocation":"1368:22:3","nodeType":"VariableDeclaration","scope":609,"src":"1344:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1344:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1393:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"anonymous":false,"id":257,"name":"PolicyPurchased","nameLocation":"1429:15:3","nodeType":"EventDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"indexed":true,"mutability":"mutable","name":"policyholder","nameLocation":"1470:12:3","nodeType":"VariableDeclaration","scope":257,"src":"1454:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"1454:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":251,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"1509:8:3","nodeType":"VariableDeclaration","scope":257,"src":"1493:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":253,"indexed":false,"mutability":"mutable","name":"coverageAmount","nameLocation":"1536:14:3","nodeType":"VariableDeclaration","scope":257,"src":"1528:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":255,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"1569:7:3","nodeType":"VariableDeclaration","scope":257,"src":"1561:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1561:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1444:138:3"},"src":"1423:160:3"},{"anonymous":false,"id":265,"name":"ClaimSubmitted","nameLocation":"1594:14:3","nodeType":"EventDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"indexed":true,"mutability":"mutable","name":"policyholder","nameLocation":"1634:12:3","nodeType":"VariableDeclaration","scope":265,"src":"1618:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"1618:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"1673:7:3","nodeType":"VariableDeclaration","scope":265,"src":"1657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"1657:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":263,"indexed":false,"mutability":"mutable","name":"claimAmount","nameLocation":"1699:11:3","nodeType":"VariableDeclaration","scope":265,"src":"1691:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1608:108:3"},"src":"1588:129:3"},{"anonymous":false,"id":272,"name":"ClaimProcessed","nameLocation":"1728:14:3","nodeType":"EventDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"1768:7:3","nodeType":"VariableDeclaration","scope":272,"src":"1752:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1798:6:3","nodeType":"VariableDeclaration","scope":272,"src":"1786:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"},"typeName":{"id":269,"nodeType":"UserDefinedTypeName","pathNode":{"id":268,"name":"ClaimStatus","nodeType":"IdentifierPath","referencedDeclaration":207,"src":"1786:11:3"},"referencedDeclaration":207,"src":"1786:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"visibility":"internal"}],"src":"1742:68:3"},"src":"1722:89:3"},{"body":{"id":360,"nodeType":"Block","src":"1941:1094:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"2008:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":281,"name":"MIN_COVERAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2026:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2008:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":283,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"2055:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":284,"name":"MAX_COVERAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"2073:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2055:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2008:77:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f76657261676520616d6f756e74","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2100:25:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8","typeString":"literal_string \"Invalid coverage amount\""},"value":"Invalid coverage amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8","typeString":"literal_string \"Invalid coverage amount\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1987:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1987:148:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"1987:148:3"},{"assignments":[291],"declarations":[{"constant":false,"id":291,"mutability":"mutable","name":"premium","nameLocation":"2208:7:3","nodeType":"VariableDeclaration","scope":360,"src":"2200:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":295,"initialValue":{"arguments":[{"id":293,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"2235:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":292,"name":"calculatePremium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"2218:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2218:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2200:50:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":297,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2268:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2268:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":299,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2268:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207072656d69756d207061796d656e74","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2290:30:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f","typeString":"literal_string \"Insufficient premium payment\""},"value":"Insufficient premium payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f","typeString":"literal_string \"Insufficient premium payment\""}],"id":296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2260:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"ExpressionStatement","src":"2260:61:3"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"newPolicy","nameLocation":"2375:9:3","nodeType":"VariableDeclaration","scope":360,"src":"2361:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_memory_ptr","typeString":"struct HealthInsurance.Policy"},"typeName":{"id":305,"nodeType":"UserDefinedTypeName","pathNode":{"id":304,"name":"Policy","nodeType":"IdentifierPath","referencedDeclaration":189,"src":"2361:6:3"},"referencedDeclaration":189,"src":"2361:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"}},"visibility":"internal"}],"id":321,"initialValue":{"arguments":[{"id":308,"name":"policyCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2412:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2453:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2453:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":311,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"2493:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":312,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2530:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":313,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2562:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2562:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2600:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2600:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"333635","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2618:8:3","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"2600:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2667:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":307,"name":"Policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2387:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Policy_$189_storage_ptr_$","typeString":"type(struct HealthInsurance.Policy storage pointer)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["id","policyholder","coverageAmount","premium","startDate","endDate","isActive"],"nodeType":"FunctionCall","src":"2387:295:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_memory_ptr","typeString":"struct HealthInsurance.Policy memory"}},"nodeType":"VariableDeclarationStatement","src":"2361:321:3"},{"expression":{"arguments":[{"id":327,"name":"newPolicy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2747:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_memory_ptr","typeString":"struct HealthInsurance.Policy memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Policy_$189_memory_ptr","typeString":"struct HealthInsurance.Policy memory"}],"expression":{"baseExpression":{"id":322,"name":"userPolicies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2717:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Policy_$189_storage_$dyn_storage_$","typeString":"mapping(address => struct HealthInsurance.Policy storage ref[] storage ref)"}},"id":325,"indexExpression":{"expression":{"id":323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2730:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2730:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2717:24:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Policy_$189_storage_$dyn_storage","typeString":"struct HealthInsurance.Policy storage ref[] storage ref"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2717:29:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Policy_$189_storage_$dyn_storage_ptr_$_t_struct$_Policy_$189_storage_$returns$__$bound_to$_t_array$_t_struct$_Policy_$189_storage_$dyn_storage_ptr_$","typeString":"function (struct HealthInsurance.Policy storage ref[] storage pointer,struct HealthInsurance.Policy storage ref)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"2717:40:3"},{"expression":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2767:15:3","subExpression":{"id":330,"name":"policyCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2767:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":332,"nodeType":"ExpressionStatement","src":"2767:15:3"},{"eventCall":{"arguments":[{"expression":{"id":334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2836:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2836:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":336,"name":"newPolicy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2848:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_memory_ptr","typeString":"struct HealthInsurance.Policy memory"}},"id":337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":176,"src":"2848:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":338,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"2862:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":339,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2878:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":333,"name":"PolicyPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2820:15:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2820:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"EmitStatement","src":"2815:71:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2934:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2934:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":344,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2946:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2934:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":359,"nodeType":"IfStatement","src":"2930:99:3","trueBody":{"id":358,"nodeType":"Block","src":"2955:74:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":352,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2998:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2998:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":354,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"3010:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2998:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":348,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2977:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2977:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2969:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"2969:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2969:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"2969:28:3","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2969:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"2969:49:3"}]}}]},"functionSelector":"c1260c9a","id":361,"implemented":true,"kind":"function","modifiers":[{"id":277,"kind":"modifierInvocation","modifierName":{"id":276,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":143,"src":"1928:12:3"},"nodeType":"ModifierInvocation","src":"1928:12:3"}],"name":"purchasePolicy","nameLocation":"1872:14:3","nodeType":"FunctionDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"coverageAmount","nameLocation":"1895:14:3","nodeType":"VariableDeclaration","scope":361,"src":"1887:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1886:24:3"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"1941:0:3"},"scope":609,"src":"1863:1172:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":432,"nodeType":"Block","src":"3209:849:3","statements":[{"assignments":[374],"declarations":[{"constant":false,"id":374,"mutability":"mutable","name":"policy","nameLocation":"3261:6:3","nodeType":"VariableDeclaration","scope":432,"src":"3246:21:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"},"typeName":{"id":373,"nodeType":"UserDefinedTypeName","pathNode":{"id":372,"name":"Policy","nodeType":"IdentifierPath","referencedDeclaration":189,"src":"3246:6:3"},"referencedDeclaration":189,"src":"3246:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"}},"visibility":"internal"}],"id":378,"initialValue":{"arguments":[{"id":376,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3286:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":375,"name":"_findUserPolicy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3270:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Policy_$189_storage_ptr_$","typeString":"function (uint256) view returns (struct HealthInsurance.Policy storage pointer)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3270:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3246:49:3"},{"expression":{"arguments":[{"expression":{"id":380,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3348:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":188,"src":"3348:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206973206e6f7420616374697665","id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3365:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""},"value":"Policy is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""}],"id":379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3340:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3340:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"ExpressionStatement","src":"3340:48:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"3419:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":387,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3434:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"coverageAmount","nodeType":"MemberAccess","referencedDeclaration":180,"src":"3434:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3419:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20616d6f756e74206578636565647320636f766572616765","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3470:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700","typeString":"literal_string \"Claim amount exceeds coverage\""},"value":"Claim amount exceeds coverage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700","typeString":"literal_string \"Claim amount exceeds coverage\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3398:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3398:113:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"ExpressionStatement","src":"3398:113:3"},{"assignments":[395],"declarations":[{"constant":false,"id":395,"mutability":"mutable","name":"newClaim","nameLocation":"3559:8:3","nodeType":"VariableDeclaration","scope":432,"src":"3546:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_memory_ptr","typeString":"struct HealthInsurance.Claim"},"typeName":{"id":394,"nodeType":"UserDefinedTypeName","pathNode":{"id":393,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"3546:5:3"},"referencedDeclaration":203,"src":"3546:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim"}},"visibility":"internal"}],"id":406,"initialValue":{"arguments":[{"id":397,"name":"claimCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3594:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":398,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"3630:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":399,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"3665:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":400,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3706:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3706:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":402,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"3743:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$207_$","typeString":"type(enum HealthInsurance.ClaimStatus)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":204,"src":"3743:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},{"id":404,"name":"medicalDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"3794:16:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":396,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"3570:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Claim_$203_storage_ptr_$","typeString":"type(struct HealthInsurance.Claim storage pointer)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["id","policyId","claimAmount","submissionDate","status","medicalDocuments"],"nodeType":"FunctionCall","src":"3570:251:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_memory_ptr","typeString":"struct HealthInsurance.Claim memory"}},"nodeType":"VariableDeclarationStatement","src":"3546:275:3"},{"expression":{"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":407,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3855:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$203_storage_$","typeString":"mapping(uint256 => struct HealthInsurance.Claim storage ref)"}},"id":409,"indexExpression":{"id":408,"name":"claimCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3862:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3855:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage","typeString":"struct HealthInsurance.Claim storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":410,"name":"newClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3878:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_memory_ptr","typeString":"struct HealthInsurance.Claim memory"}},"src":"3855:31:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage","typeString":"struct HealthInsurance.Claim storage ref"}},"id":412,"nodeType":"ExpressionStatement","src":"3855:31:3"},{"expression":{"arguments":[{"id":418,"name":"claimCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3924:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":413,"name":"userClaims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3896:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":416,"indexExpression":{"expression":{"id":414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3907:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3907:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3896:22:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3896:27:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"3896:41:3"},{"expression":{"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3947:14:3","subExpression":{"id":421,"name":"claimCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3947:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":423,"nodeType":"ExpressionStatement","src":"3947:14:3"},{"eventCall":{"arguments":[{"expression":{"id":425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4014:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4014:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":427,"name":"newClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4026:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_memory_ptr","typeString":"struct HealthInsurance.Claim memory"}},"id":428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":191,"src":"4026:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":429,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4039:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":424,"name":"ClaimSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"3999:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3999:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"EmitStatement","src":"3994:57:3"}]},"functionSelector":"06964de7","id":433,"implemented":true,"kind":"function","modifiers":[{"id":370,"kind":"modifierInvocation","modifierName":{"id":369,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":143,"src":"3196:12:3"},"nodeType":"ModifierInvocation","src":"3196:12:3"}],"name":"submitClaim","nameLocation":"3072:11:3","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"policyId","nameLocation":"3101:8:3","nodeType":"VariableDeclaration","scope":433,"src":"3093:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"claimAmount","nameLocation":"3128:11:3","nodeType":"VariableDeclaration","scope":433,"src":"3120:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"medicalDocuments","nameLocation":"3164:16:3","nodeType":"VariableDeclaration","scope":433,"src":"3150:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":366,"name":"string","nodeType":"ElementaryTypeName","src":"3150:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3083:103:3"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"3209:0:3"},"scope":609,"src":"3063:995:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":502,"nodeType":"Block","src":"4217:548:3","statements":[{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"claim","nameLocation":"4241:5:3","nodeType":"VariableDeclaration","scope":502,"src":"4227:19:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim"},"typeName":{"id":445,"nodeType":"UserDefinedTypeName","pathNode":{"id":444,"name":"Claim","nodeType":"IdentifierPath","referencedDeclaration":203,"src":"4227:5:3"},"referencedDeclaration":203,"src":"4227:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim"}},"visibility":"internal"}],"id":450,"initialValue":{"baseExpression":{"id":447,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4249:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$203_storage_$","typeString":"mapping(uint256 => struct HealthInsurance.Claim storage ref)"}},"id":449,"indexExpression":{"id":448,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"4256:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4249:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage","typeString":"struct HealthInsurance.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4227:37:3"},{"assignments":[453],"declarations":[{"constant":false,"id":453,"mutability":"mutable","name":"policy","nameLocation":"4289:6:3","nodeType":"VariableDeclaration","scope":502,"src":"4274:21:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"},"typeName":{"id":452,"nodeType":"UserDefinedTypeName","pathNode":{"id":451,"name":"Policy","nodeType":"IdentifierPath","referencedDeclaration":189,"src":"4274:6:3"},"referencedDeclaration":189,"src":"4274:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"}},"visibility":"internal"}],"id":458,"initialValue":{"arguments":[{"expression":{"id":455,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4314:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim storage pointer"}},"id":456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":193,"src":"4314:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":454,"name":"_findUserPolicy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4298:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_struct$_Policy_$189_storage_ptr_$","typeString":"function (uint256) view returns (struct HealthInsurance.Policy storage pointer)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4298:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4274:55:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":460,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4348:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim storage pointer"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":200,"src":"4348:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":462,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"4364:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$207_$","typeString":"type(enum HealthInsurance.ClaimStatus)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4364:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"src":"4348:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20616c72656164792070726f636573736564","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4385:25:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde","typeString":"literal_string \"Claim already processed\""},"value":"Claim already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde","typeString":"literal_string \"Claim already processed\""}],"id":459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4340:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4340:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"4340:71:3"},{"condition":{"id":468,"name":"approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4426:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":494,"nodeType":"Block","src":"4624:60:3","statements":[{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":487,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4638:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim storage pointer"}},"id":489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":200,"src":"4638:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":490,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"4653:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$207_$","typeString":"type(enum HealthInsurance.ClaimStatus)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Rejected","nodeType":"MemberAccess","referencedDeclaration":206,"src":"4653:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"src":"4638:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"id":493,"nodeType":"ExpressionStatement","src":"4638:35:3"}]},"id":495,"nodeType":"IfStatement","src":"4422:262:3","trueBody":{"id":486,"nodeType":"Block","src":"4435:183:3","statements":[{"expression":{"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":469,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4449:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim storage pointer"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":200,"src":"4449:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":472,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"4464:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$207_$","typeString":"type(enum HealthInsurance.ClaimStatus)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Approved","nodeType":"MemberAccess","referencedDeclaration":205,"src":"4464:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"src":"4449:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}},"id":475,"nodeType":"ExpressionStatement","src":"4449:35:3"},{"expression":{"arguments":[{"expression":{"id":482,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4589:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim storage pointer"}},"id":483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"claimAmount","nodeType":"MemberAccess","referencedDeclaration":195,"src":"4589:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":478,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4559:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy storage pointer"}},"id":479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":178,"src":"4559:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4551:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"4551:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4551:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"4551:37:3","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4551:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"4551:56:3"}]}},{"eventCall":{"arguments":[{"id":497,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"4736:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":498,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4745:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$203_storage_ptr","typeString":"struct HealthInsurance.Claim storage pointer"}},"id":499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":200,"src":"4745:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ClaimStatus_$207","typeString":"enum HealthInsurance.ClaimStatus"}],"id":496,"name":"ClaimProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4721:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_ClaimStatus_$207_$returns$__$","typeString":"function (uint256,enum HealthInsurance.ClaimStatus)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4721:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"EmitStatement","src":"4716:42:3"}]},"functionSelector":"35446def","id":503,"implemented":true,"kind":"function","modifiers":[{"id":440,"kind":"modifierInvocation","modifierName":{"id":439,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"4194:9:3"},"nodeType":"ModifierInvocation","src":"4194:9:3"},{"id":442,"kind":"modifierInvocation","modifierName":{"id":441,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":143,"src":"4204:12:3"},"nodeType":"ModifierInvocation","src":"4204:12:3"}],"name":"processClaim","nameLocation":"4118:12:3","nodeType":"FunctionDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"claimId","nameLocation":"4148:7:3","nodeType":"VariableDeclaration","scope":503,"src":"4140:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"4140:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"approve","nameLocation":"4171:7:3","nodeType":"VariableDeclaration","scope":503,"src":"4166:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":436,"name":"bool","nodeType":"ElementaryTypeName","src":"4166:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4130:54:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[],"src":"4217:0:3"},"scope":609,"src":"4109:656:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":550,"nodeType":"Block","src":"4914:267:3","statements":[{"assignments":[515],"declarations":[{"constant":false,"id":515,"mutability":"mutable","name":"policies","nameLocation":"4941:8:3","nodeType":"VariableDeclaration","scope":550,"src":"4924:25:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Policy_$189_storage_$dyn_storage_ptr","typeString":"struct HealthInsurance.Policy[]"},"typeName":{"baseType":{"id":513,"nodeType":"UserDefinedTypeName","pathNode":{"id":512,"name":"Policy","nodeType":"IdentifierPath","referencedDeclaration":189,"src":"4924:6:3"},"referencedDeclaration":189,"src":"4924:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"}},"id":514,"nodeType":"ArrayTypeName","src":"4924:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Policy_$189_storage_$dyn_storage_ptr","typeString":"struct HealthInsurance.Policy[]"}},"visibility":"internal"}],"id":520,"initialValue":{"baseExpression":{"id":516,"name":"userPolicies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"4952:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Policy_$189_storage_$dyn_storage_$","typeString":"mapping(address => struct HealthInsurance.Policy storage ref[] storage ref)"}},"id":519,"indexExpression":{"expression":{"id":517,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4965:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4965:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4952:24:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Policy_$189_storage_$dyn_storage","typeString":"struct HealthInsurance.Policy storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4924:52:3"},{"body":{"id":544,"nodeType":"Block","src":"5032:107:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":532,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"5050:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Policy_$189_storage_$dyn_storage_ptr","typeString":"struct HealthInsurance.Policy storage ref[] storage pointer"}},"id":534,"indexExpression":{"id":533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5059:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5050:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage","typeString":"struct HealthInsurance.Policy storage ref"}},"id":535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":176,"src":"5050:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":536,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5068:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5050:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":543,"nodeType":"IfStatement","src":"5046:83:3","trueBody":{"id":542,"nodeType":"Block","src":"5078:51:3","statements":[{"expression":{"baseExpression":{"id":538,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"5103:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Policy_$189_storage_$dyn_storage_ptr","typeString":"struct HealthInsurance.Policy storage ref[] storage pointer"}},"id":540,"indexExpression":{"id":539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5112:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5103:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage","typeString":"struct HealthInsurance.Policy storage ref"}},"functionReturnParameters":510,"id":541,"nodeType":"Return","src":"5096:18:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5006:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":526,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"5010:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Policy_$189_storage_$dyn_storage_ptr","typeString":"struct HealthInsurance.Policy storage ref[] storage pointer"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5010:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5006:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":545,"initializationExpression":{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"i","nameLocation":"4999:1:3","nodeType":"VariableDeclaration","scope":545,"src":"4991:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4991:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":524,"initialValue":{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4991:13:3"},"loopExpression":{"expression":{"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5027:3:3","subExpression":{"id":529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5027:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":531,"nodeType":"ExpressionStatement","src":"5027:3:3"},"nodeType":"ForStatement","src":"4986:153:3"},{"expression":{"arguments":[{"hexValue":"506f6c696379206e6f7420666f756e64","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5155:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79","typeString":"literal_string \"Policy not found\""},"value":"Policy not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79","typeString":"literal_string \"Policy not found\""}],"id":546,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5148:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"5148:26:3"}]},"id":551,"implemented":true,"kind":"function","modifiers":[],"name":"_findUserPolicy","nameLocation":"4827:15:3","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"policyId","nameLocation":"4860:8:3","nodeType":"VariableDeclaration","scope":551,"src":"4852:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4852:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4842:32:3"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":551,"src":"4898:14:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"},"typeName":{"id":508,"nodeType":"UserDefinedTypeName","pathNode":{"id":507,"name":"Policy","nodeType":"IdentifierPath","referencedDeclaration":189,"src":"4898:6:3"},"referencedDeclaration":189,"src":"4898:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$189_storage_ptr","typeString":"struct HealthInsurance.Policy"}},"visibility":"internal"}],"src":"4897:16:3"},"scope":609,"src":"4818:363:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":580,"nodeType":"Block","src":"5333:333:3","statements":[{"assignments":[559],"declarations":[{"constant":false,"id":559,"mutability":"mutable","name":"premiumPercentage","nameLocation":"5448:17:3","nodeType":"VariableDeclaration","scope":580,"src":"5440:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"5440:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":572,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":560,"name":"MIN_PREMIUM_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"5468:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":561,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"5508:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":562,"name":"MAX_PREMIUM_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"5526:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":563,"name":"MIN_PREMIUM_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"5551:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5526:47:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5525:49:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:66:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5507:68:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":568,"name":"MAX_COVERAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"5578:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5507:83:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5506:85:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5468:123:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5440:151:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":573,"name":"coverageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"5618:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":574,"name":"premiumPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"5635:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5618:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5617:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5656:3:3","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5617:42:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":557,"id":579,"nodeType":"Return","src":"5610:49:3"}]},"id":581,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePremium","nameLocation":"5246:16:3","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"coverageAmount","nameLocation":"5280:14:3","nodeType":"VariableDeclaration","scope":581,"src":"5272:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"5272:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5262:38:3"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":581,"src":"5324:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5323:9:3"},"scope":609,"src":"5237:429:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":599,"nodeType":"Block","src":"5757:65:3","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":594,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5801:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_HealthInsurance_$609","typeString":"contract HealthInsurance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HealthInsurance_$609","typeString":"contract HealthInsurance"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5793:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"5793:7:3","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5793:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5793:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":588,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"5775:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5775:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5767:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"5767:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5767:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"5767:25:3","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5767:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"5767:48:3"}]},"functionSelector":"3ccfd60b","id":600,"implemented":true,"kind":"function","modifiers":[{"id":584,"kind":"modifierInvocation","modifierName":{"id":583,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"5747:9:3"},"nodeType":"ModifierInvocation","src":"5747:9:3"}],"name":"withdraw","nameLocation":"5727:8:3","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"5735:2:3"},"returnParameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"5757:0:3"},"scope":609,"src":"5718:104:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":603,"nodeType":"Block","src":"5893:2:3","statements":[]},"id":604,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"5873:2:3"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"5893:0:3"},"scope":609,"src":"5866:29:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":607,"nodeType":"Block","src":"5928:2:3","statements":[]},"id":608,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"5908:2:3"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"5928:0:3"},"scope":609,"src":"5900:30:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":610,"src":"174:5758:3","usedErrors":[]}],"src":"32:5900:3"},"id":3}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":115,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HealthInsurance.sol":{"HealthInsurance":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":false,"internalType":"enum HealthInsurance.ClaimStatus","name":"status","type":"uint8"}],"name":"ClaimProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"policyholder","type":"address"},{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"claimAmount","type":"uint256"}],"name":"ClaimSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"policyholder","type":"address"},{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"coverageAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"}],"name":"PolicyPurchased","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"MAX_COVERAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PREMIUM_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_COVERAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_PREMIUM_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"claims","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"uint256","name":"claimAmount","type":"uint256"},{"internalType":"uint256","name":"submissionDate","type":"uint256"},{"internalType":"enum HealthInsurance.ClaimStatus","name":"status","type":"uint8"},{"internalType":"string","name":"medicalDocuments","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"policyCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"claimId","type":"uint256"},{"internalType":"bool","name":"approve","type":"bool"}],"name":"processClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"coverageAmount","type":"uint256"}],"name":"purchasePolicy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"uint256","name":"claimAmount","type":"uint256"},{"internalType":"string","name":"medicalDocuments","type":"string"}],"name":"submitClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userClaims","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userPolicies","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"policyholder","type":"address"},{"internalType":"uint256","name":"coverageAmount","type":"uint256"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_123":{"entryPoint":null,"id":123,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_156":{"entryPoint":57,"id":156,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_103":{"entryPoint":65,"id":103,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x39 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x41 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x105 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1F8B DUP1 PUSH2 0x114 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC1260C9A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC1260C9A EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xCA9748EA EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD52C1BEA EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38B JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x9EFA0AA9 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x2C5 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3D36ADC5 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x3D36ADC5 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x4B930487 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4EFA8F17 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x5EFF1735 EQ PUSH2 0x22D JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6964DE7 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x2925993D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x35446DEF EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x17D JUMPI PUSH2 0xFE JUMP JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0xA67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x40D DUP5 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x457 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4E2 JUMPI PUSH2 0x4E1 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x556 JUMPI PUSH2 0x555 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x577 SWAP3 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5F6 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x0 ADD MLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFE6542B2C812F9D65D4EA6F1D81BCD2E556C05BF33B6697AB14179AA484CFCC2 DUP7 PUSH1 0x40 MLOAD PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP2 JUMP JUMPDEST PUSH2 0x672 PUSH2 0x115D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x690 PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DD SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x75A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x770 JUMPI PUSH2 0x76F PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x794 JUMPI PUSH2 0x793 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x87B JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x802 JUMPI PUSH2 0x801 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 PUSH1 0x2 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8A3 JUMPI PUSH2 0x8A2 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST DUP4 PUSH32 0x71B2546244A774FD0B97D37CEAAC0B5F5FC83F468ABB1877F67FCFCA93A20C40 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x907 PUSH2 0x115D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x925 PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x983 PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0xA6F PUSH2 0x115D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA8D PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAED PUSH1 0x0 PUSH2 0x1165 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0xB74 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBA0 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBC2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBD0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC34 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH10 0x21E19E0C9BAB2400000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xC69 JUMPI POP PUSH10 0xD3C21BCECCEDA1000000 DUP2 GT ISZERO JUMPDEST PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9F SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP3 PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEF SWAP1 PUSH2 0x1789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1E13380 TIMESTAMP PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE70 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x0 ADD MLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8B8961810A39FD56D36E421278C7737795A230B372AC246EB46D37EAE370DB5F DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEC2 SWAP3 SWAP2 SWAP1 PUSH2 0x18B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP2 CALLVALUE GT ISZERO PUSH2 0xF25 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 CALLVALUE PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF70 PUSH2 0x115D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF8E PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDB SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104B SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x105D DUP2 PUSH2 0x1165 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x111C JUMPI DUP4 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10C7 JUMPI PUSH2 0x10C6 PUSH2 0x1CE2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x1109 JUMPI DUP2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10F2 JUMPI PUSH2 0x10F1 PUSH2 0x1CE2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1114 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10A7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x5 PUSH1 0x14 PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST DUP5 PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x125A SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP5 PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1294 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x12B6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12FD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x12CF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12FD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12FD JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12FC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12E1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x130E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1327 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x130F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133E PUSH2 0x1339 DUP5 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x1D45 JUMP JUMPDEST JUMPDEST PUSH2 0x1365 DUP5 DUP3 DUP6 PUSH2 0x1B38 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137C DUP2 PUSH2 0x1F10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1391 DUP2 PUSH2 0x1F27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13AC JUMPI PUSH2 0x13AB PUSH2 0x1D40 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x132B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D4 DUP2 PUSH2 0x1F3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP5 DUP3 DUP6 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141E JUMPI PUSH2 0x141D PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142C DUP6 DUP3 DUP7 ADD PUSH2 0x136D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143D DUP6 DUP3 DUP7 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH2 0x145C PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x146B DUP5 DUP3 DUP6 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148B JUMPI PUSH2 0x148A PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1499 DUP6 DUP3 DUP7 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14AA DUP6 DUP3 DUP7 ADD PUSH2 0x1382 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14DB DUP7 DUP3 DUP8 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14EC DUP7 DUP3 DUP8 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x150D JUMPI PUSH2 0x150C PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH2 0x1519 DUP7 DUP3 DUP8 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x152C DUP2 PUSH2 0x1ACB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x153B DUP2 PUSH2 0x1ADD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x154A DUP2 PUSH2 0x1B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155B DUP3 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x1565 DUP2 DUP6 PUSH2 0x19A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1575 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0x157E DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1596 PUSH1 0x17 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15A1 DUP3 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 PUSH1 0x26 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C4 DUP3 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DC PUSH1 0x10 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E7 DUP3 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FF PUSH1 0x17 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x160A DUP3 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1622 PUSH1 0x1C DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x162D DUP3 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1645 PUSH1 0x14 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1650 DUP3 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1668 PUSH1 0x20 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1673 DUP3 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168B PUSH1 0x1D DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1696 DUP3 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AE PUSH1 0x1F DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B9 DUP3 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CD DUP2 PUSH2 0x1B1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1703 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1541 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1722 DUP2 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1742 DUP2 PUSH2 0x15AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1762 DUP2 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1782 DUP2 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A2 DUP2 PUSH2 0x1615 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17C2 DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17E2 DUP2 PUSH2 0x165B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1802 DUP2 PUSH2 0x167E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1822 DUP2 PUSH2 0x16A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1859 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x1866 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1523 JUMP JUMPDEST PUSH2 0x1873 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x1880 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x188D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x189A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x18A7 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1532 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18C8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x18D5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x18F1 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x18FE PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x190B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x1918 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x1925 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1541 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1937 DUP2 DUP5 PUSH2 0x1550 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194E PUSH2 0x195F JUMP JUMPDEST SWAP1 POP PUSH2 0x195A DUP3 DUP3 PUSH2 0x1BAC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1984 JUMPI PUSH2 0x1983 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH2 0x198D DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C1 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x19CC DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A01 JUMPI PUSH2 0x1A00 PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A22 DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x1C55 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A48 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A53 DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A8C JUMPI PUSH2 0x1A8B PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA2 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAD DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1AC0 JUMPI PUSH2 0x1ABF PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD6 DUP3 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1AF7 DUP3 PUSH2 0x1EFC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B31 DUP3 PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B65 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B4A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B92 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BA6 JUMPI PUSH2 0x1BA5 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB5 DUP3 PUSH2 0x1D54 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BD4 JUMPI PUSH2 0x1BD3 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE8 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1C1B JUMPI PUSH2 0x1C1A PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F76657261676520616D6F756E74000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F6C696379206E6F7420666F756E6400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436C61696D20616C72656164792070726F636573736564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207072656D69756D207061796D656E7400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F6C696379206973206E6F7420616374697665000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436C61696D20616D6F756E74206578636565647320636F766572616765000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F19 DUP2 PUSH2 0x1ACB JUMP JUMPDEST DUP2 EQ PUSH2 0x1F24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F30 DUP2 PUSH2 0x1ADD JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F47 DUP2 PUSH2 0x1B1C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDD 0xC1 0xE5 0xDF PUSH28 0xAFBD8D1C85A6E1F462AFD46C3581BFB46DB357616958803D99726473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"174:5758:3:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1701:1:1;1806:7;:22;;;;174:5758:3;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;174:5758:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_COVERAGE_241":{"entryPoint":2840,"id":241,"parameterSlots":0,"returnSlots":0},"@MAX_PREMIUM_PERCENTAGE_247":{"entryPoint":2658,"id":247,"parameterSlots":0,"returnSlots":0},"@MIN_COVERAGE_234":{"entryPoint":1628,"id":234,"parameterSlots":0,"returnSlots":0},"@MIN_PREMIUM_PERCENTAGE_244":{"entryPoint":2647,"id":244,"parameterSlots":0,"returnSlots":0},"@_604":{"entryPoint":null,"id":604,"parameterSlots":0,"returnSlots":0},"@_608":{"entryPoint":null,"id":608,"parameterSlots":0,"returnSlots":0},"@_findUserPolicy_551":{"entryPoint":4192,"id":551,"parameterSlots":1,"returnSlots":1},"@_msgSender_156":{"entryPoint":4445,"id":156,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_103":{"entryPoint":4453,"id":103,"parameterSlots":1,"returnSlots":0},"@calculatePremium_581":{"entryPoint":4649,"id":581,"parameterSlots":1,"returnSlots":1},"@claimCounter_227":{"entryPoint":2652,"id":227,"parameterSlots":0,"returnSlots":0},"@claims_218":{"entryPoint":2854,"id":218,"parameterSlots":0,"returnSlots":0},"@owner_32":{"entryPoint":2799,"id":32,"parameterSlots":0,"returnSlots":1},"@policyCounter_225":{"entryPoint":3938,"id":225,"parameterSlots":0,"returnSlots":0},"@processClaim_503":{"entryPoint":1642,"id":503,"parameterSlots":2,"returnSlots":0},"@purchasePolicy_361":{"entryPoint":3063,"id":361,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_60":{"entryPoint":2663,"id":60,"parameterSlots":0,"returnSlots":0},"@submitClaim_433":{"entryPoint":948,"id":433,"parameterSlots":3,"returnSlots":0},"@transferOwnership_83":{"entryPoint":3944,"id":83,"parameterSlots":1,"returnSlots":0},"@userClaims_223":{"entryPoint":3889,"id":223,"parameterSlots":0,"returnSlots":0},"@userPolicies_213":{"entryPoint":2507,"id":213,"parameterSlots":0,"returnSlots":0},"@withdraw_600":{"entryPoint":2303,"id":600,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":4907,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":4994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":5015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5082,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5127,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":5191,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bool":{"entryPoint":5236,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":5300,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5411,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5426,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_ClaimStatus_$207_to_t_uint8_fromStack":{"entryPoint":5441,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8_to_t_string_memory_ptr_fromStack":{"entryPoint":5513,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":5548,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79_to_t_string_memory_ptr_fromStack":{"entryPoint":5583,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde_to_t_string_memory_ptr_fromStack":{"entryPoint":5618,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f_to_t_string_memory_ptr_fromStack":{"entryPoint":5653,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9_to_t_string_memory_ptr_fromStack":{"entryPoint":5688,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":5723,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700_to_t_string_memory_ptr_fromStack":{"entryPoint":5758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":5793,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5828,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_ClaimStatus_$207__to_t_uint8__fromStack_reversed":{"entryPoint":5870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5961,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6025,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6057,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6089,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6121,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6153,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6185,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":6212,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6323,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_ClaimStatus_$207_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6364,"id":null,"parameterSlots":7,"returnSlots":1},"allocate_memory":{"entryPoint":6468,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6495,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":6505,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6554,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6565,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6582,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6668,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6717,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6807,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6859,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6877,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_ClaimStatus_$207":{"entryPoint":6889,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6908,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6940,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_ClaimStatus_$207_to_t_uint8":{"entryPoint":6950,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6968,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":6983,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7034,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7084,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":7133,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7206,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7253,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7300,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7347,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7394,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7441,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7488,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7493,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7498,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7503,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7508,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8":{"entryPoint":7525,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":7566,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79":{"entryPoint":7645,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde":{"entryPoint":7686,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f":{"entryPoint":7727,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9":{"entryPoint":7768,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":7809,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700":{"entryPoint":7850,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":7891,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_ClaimStatus_$207":{"entryPoint":7932,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7952,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7975,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7998,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22331:4","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:4","statements":[{"nodeType":"YulAssignment","src":"101:75:4","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:4"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:4"},"nodeType":"YulFunctionCall","src":"126:49:4"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:4"},"nodeType":"YulFunctionCall","src":"110:66:4"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:4"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:4"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:4"},"nodeType":"YulFunctionCall","src":"185:21:4"},"nodeType":"YulExpressionStatement","src":"185:21:4"},{"nodeType":"YulVariableDeclaration","src":"215:27:4","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:4"},"nodeType":"YulFunctionCall","src":"226:16:4"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:4"},"nodeType":"YulFunctionCall","src":"282:79:4"},"nodeType":"YulExpressionStatement","src":"282:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:4"},"nodeType":"YulFunctionCall","src":"257:16:4"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:4"},"nodeType":"YulFunctionCall","src":"254:25:4"},"nodeType":"YulIf","src":"251:112:4"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:4"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:4"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:4"},"nodeType":"YulFunctionCall","src":"372:41:4"},"nodeType":"YulExpressionStatement","src":"372:41:4"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:4","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:4","type":""}],"src":"7:412:4"},{"body":{"nodeType":"YulBlock","src":"477:87:4","statements":[{"nodeType":"YulAssignment","src":"487:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"509:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:4"},"nodeType":"YulFunctionCall","src":"496:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"487:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"552:5:4"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"525:26:4"},"nodeType":"YulFunctionCall","src":"525:33:4"},"nodeType":"YulExpressionStatement","src":"525:33:4"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"463:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"471:5:4","type":""}],"src":"425:139:4"},{"body":{"nodeType":"YulBlock","src":"619:84:4","statements":[{"nodeType":"YulAssignment","src":"629:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"651:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"638:12:4"},"nodeType":"YulFunctionCall","src":"638:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"629:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"691:5:4"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"667:23:4"},"nodeType":"YulFunctionCall","src":"667:30:4"},"nodeType":"YulExpressionStatement","src":"667:30:4"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"597:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"605:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"613:5:4","type":""}],"src":"570:133:4"},{"body":{"nodeType":"YulBlock","src":"785:278:4","statements":[{"body":{"nodeType":"YulBlock","src":"834:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"836:77:4"},"nodeType":"YulFunctionCall","src":"836:79:4"},"nodeType":"YulExpressionStatement","src":"836:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"813:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"821:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:4"},"nodeType":"YulFunctionCall","src":"809:17:4"},{"name":"end","nodeType":"YulIdentifier","src":"828:3:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"805:3:4"},"nodeType":"YulFunctionCall","src":"805:27:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"798:6:4"},"nodeType":"YulFunctionCall","src":"798:35:4"},"nodeType":"YulIf","src":"795:122:4"},{"nodeType":"YulVariableDeclaration","src":"926:34:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"953:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"940:12:4"},"nodeType":"YulFunctionCall","src":"940:20:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"930:6:4","type":""}]},{"nodeType":"YulAssignment","src":"969:88:4","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1030:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1038:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1026:3:4"},"nodeType":"YulFunctionCall","src":"1026:17:4"},{"name":"length","nodeType":"YulIdentifier","src":"1045:6:4"},{"name":"end","nodeType":"YulIdentifier","src":"1053:3:4"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"978:47:4"},"nodeType":"YulFunctionCall","src":"978:79:4"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"969:5:4"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"763:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"771:3:4","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"779:5:4","type":""}],"src":"723:340:4"},{"body":{"nodeType":"YulBlock","src":"1121:87:4","statements":[{"nodeType":"YulAssignment","src":"1131:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1153:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1140:12:4"},"nodeType":"YulFunctionCall","src":"1140:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1131:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1196:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1169:26:4"},"nodeType":"YulFunctionCall","src":"1169:33:4"},"nodeType":"YulExpressionStatement","src":"1169:33:4"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1099:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"1107:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:4","type":""}],"src":"1069:139:4"},{"body":{"nodeType":"YulBlock","src":"1280:263:4","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:4"},"nodeType":"YulFunctionCall","src":"1328:79:4"},"nodeType":"YulExpressionStatement","src":"1328:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:4"},"nodeType":"YulFunctionCall","src":"1297:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:4"},"nodeType":"YulFunctionCall","src":"1293:32:4"},"nodeType":"YulIf","src":"1290:119:4"},{"nodeType":"YulBlock","src":"1419:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:4"},"nodeType":"YulFunctionCall","src":"1494:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:4"},"nodeType":"YulFunctionCall","src":"1473:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:4"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1250:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1261:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1273:6:4","type":""}],"src":"1214:329:4"},{"body":{"nodeType":"YulBlock","src":"1632:391:4","statements":[{"body":{"nodeType":"YulBlock","src":"1678:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1680:77:4"},"nodeType":"YulFunctionCall","src":"1680:79:4"},"nodeType":"YulExpressionStatement","src":"1680:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1653:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"1662:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1649:3:4"},"nodeType":"YulFunctionCall","src":"1649:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"1674:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1645:3:4"},"nodeType":"YulFunctionCall","src":"1645:32:4"},"nodeType":"YulIf","src":"1642:119:4"},{"nodeType":"YulBlock","src":"1771:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1786:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1800:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1790:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1815:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1861:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1846:3:4"},"nodeType":"YulFunctionCall","src":"1846:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1870:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1825:20:4"},"nodeType":"YulFunctionCall","src":"1825:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1815:6:4"}]}]},{"nodeType":"YulBlock","src":"1898:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1913:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1927:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1917:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1943:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1978:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1989:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1974:3:4"},"nodeType":"YulFunctionCall","src":"1974:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1998:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1953:20:4"},"nodeType":"YulFunctionCall","src":"1953:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1943:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1594:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1605:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1617:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1625:6:4","type":""}],"src":"1549:474:4"},{"body":{"nodeType":"YulBlock","src":"2095:263:4","statements":[{"body":{"nodeType":"YulBlock","src":"2141:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2143:77:4"},"nodeType":"YulFunctionCall","src":"2143:79:4"},"nodeType":"YulExpressionStatement","src":"2143:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2116:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"2125:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2112:3:4"},"nodeType":"YulFunctionCall","src":"2112:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"2137:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2108:3:4"},"nodeType":"YulFunctionCall","src":"2108:32:4"},"nodeType":"YulIf","src":"2105:119:4"},{"nodeType":"YulBlock","src":"2234:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2249:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2263:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2253:6:4","type":""}]},{"nodeType":"YulAssignment","src":"2278:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"2324:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:4"},"nodeType":"YulFunctionCall","src":"2309:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2333:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2288:20:4"},"nodeType":"YulFunctionCall","src":"2288:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2278:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2065:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2076:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2088:6:4","type":""}],"src":"2029:329:4"},{"body":{"nodeType":"YulBlock","src":"2444:388:4","statements":[{"body":{"nodeType":"YulBlock","src":"2490:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2492:77:4"},"nodeType":"YulFunctionCall","src":"2492:79:4"},"nodeType":"YulExpressionStatement","src":"2492:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2465:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"2474:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2461:3:4"},"nodeType":"YulFunctionCall","src":"2461:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"2486:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:4"},"nodeType":"YulFunctionCall","src":"2457:32:4"},"nodeType":"YulIf","src":"2454:119:4"},{"nodeType":"YulBlock","src":"2583:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2598:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2612:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2602:6:4","type":""}]},{"nodeType":"YulAssignment","src":"2627:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2662:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"2673:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2658:3:4"},"nodeType":"YulFunctionCall","src":"2658:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2682:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2637:20:4"},"nodeType":"YulFunctionCall","src":"2637:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2627:6:4"}]}]},{"nodeType":"YulBlock","src":"2710:115:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2725:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2739:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2729:6:4","type":""}]},{"nodeType":"YulAssignment","src":"2755:60:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2787:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"2798:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:4"},"nodeType":"YulFunctionCall","src":"2783:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2807:7:4"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2765:17:4"},"nodeType":"YulFunctionCall","src":"2765:50:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2755:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2406:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2417:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2429:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2437:6:4","type":""}],"src":"2364:468:4"},{"body":{"nodeType":"YulBlock","src":"2948:689:4","statements":[{"body":{"nodeType":"YulBlock","src":"2994:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2996:77:4"},"nodeType":"YulFunctionCall","src":"2996:79:4"},"nodeType":"YulExpressionStatement","src":"2996:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2969:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"2978:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2965:3:4"},"nodeType":"YulFunctionCall","src":"2965:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"2990:2:4","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2961:3:4"},"nodeType":"YulFunctionCall","src":"2961:32:4"},"nodeType":"YulIf","src":"2958:119:4"},{"nodeType":"YulBlock","src":"3087:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3102:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"3116:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3106:6:4","type":""}]},{"nodeType":"YulAssignment","src":"3131:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3166:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"3177:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3162:3:4"},"nodeType":"YulFunctionCall","src":"3162:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3186:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3141:20:4"},"nodeType":"YulFunctionCall","src":"3141:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3131:6:4"}]}]},{"nodeType":"YulBlock","src":"3214:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3229:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"3243:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3233:6:4","type":""}]},{"nodeType":"YulAssignment","src":"3259:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3294:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"3305:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3290:3:4"},"nodeType":"YulFunctionCall","src":"3290:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3314:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3269:20:4"},"nodeType":"YulFunctionCall","src":"3269:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3259:6:4"}]}]},{"nodeType":"YulBlock","src":"3342:288:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3357:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3388:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"3399:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3384:3:4"},"nodeType":"YulFunctionCall","src":"3384:18:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3371:12:4"},"nodeType":"YulFunctionCall","src":"3371:32:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3361:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"3450:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3452:77:4"},"nodeType":"YulFunctionCall","src":"3452:79:4"},"nodeType":"YulExpressionStatement","src":"3452:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3422:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"3430:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3419:2:4"},"nodeType":"YulFunctionCall","src":"3419:30:4"},"nodeType":"YulIf","src":"3416:117:4"},{"nodeType":"YulAssignment","src":"3547:73:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3592:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"3603:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3588:3:4"},"nodeType":"YulFunctionCall","src":"3588:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3612:7:4"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3557:30:4"},"nodeType":"YulFunctionCall","src":"3557:63:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3547:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2902:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2913:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2925:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2933:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2941:6:4","type":""}],"src":"2838:799:4"},{"body":{"nodeType":"YulBlock","src":"3708:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3725:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3748:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3730:17:4"},"nodeType":"YulFunctionCall","src":"3730:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3718:6:4"},"nodeType":"YulFunctionCall","src":"3718:37:4"},"nodeType":"YulExpressionStatement","src":"3718:37:4"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3696:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3703:3:4","type":""}],"src":"3643:118:4"},{"body":{"nodeType":"YulBlock","src":"3826:50:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3843:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3863:5:4"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3848:14:4"},"nodeType":"YulFunctionCall","src":"3848:21:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3836:6:4"},"nodeType":"YulFunctionCall","src":"3836:34:4"},"nodeType":"YulExpressionStatement","src":"3836:34:4"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3814:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3821:3:4","type":""}],"src":"3767:109:4"},{"body":{"nodeType":"YulBlock","src":"3960:79:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3977:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4026:5:4"}],"functionName":{"name":"convert_t_enum$_ClaimStatus_$207_to_t_uint8","nodeType":"YulIdentifier","src":"3982:43:4"},"nodeType":"YulFunctionCall","src":"3982:50:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3970:6:4"},"nodeType":"YulFunctionCall","src":"3970:63:4"},"nodeType":"YulExpressionStatement","src":"3970:63:4"}]},"name":"abi_encode_t_enum$_ClaimStatus_$207_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3948:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3955:3:4","type":""}],"src":"3882:157:4"},{"body":{"nodeType":"YulBlock","src":"4137:272:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4147:53:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4194:5:4"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4161:32:4"},"nodeType":"YulFunctionCall","src":"4161:39:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4151:6:4","type":""}]},{"nodeType":"YulAssignment","src":"4209:78:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4275:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"4280:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4216:58:4"},"nodeType":"YulFunctionCall","src":"4216:71:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4209:3:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4322:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4329:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4318:3:4"},"nodeType":"YulFunctionCall","src":"4318:16:4"},{"name":"pos","nodeType":"YulIdentifier","src":"4336:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"4341:6:4"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4296:21:4"},"nodeType":"YulFunctionCall","src":"4296:52:4"},"nodeType":"YulExpressionStatement","src":"4296:52:4"},{"nodeType":"YulAssignment","src":"4357:46:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4368:3:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4395:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4373:21:4"},"nodeType":"YulFunctionCall","src":"4373:29:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4364:3:4"},"nodeType":"YulFunctionCall","src":"4364:39:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4357:3:4"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4118:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4125:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4133:3:4","type":""}],"src":"4045:364:4"},{"body":{"nodeType":"YulBlock","src":"4561:220:4","statements":[{"nodeType":"YulAssignment","src":"4571:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4637:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4642:2:4","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4578:58:4"},"nodeType":"YulFunctionCall","src":"4578:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4571:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4743:3:4"}],"functionName":{"name":"store_literal_in_memory_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8","nodeType":"YulIdentifier","src":"4654:88:4"},"nodeType":"YulFunctionCall","src":"4654:93:4"},"nodeType":"YulExpressionStatement","src":"4654:93:4"},{"nodeType":"YulAssignment","src":"4756:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4767:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4772:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4763:3:4"},"nodeType":"YulFunctionCall","src":"4763:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4756:3:4"}]}]},"name":"abi_encode_t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4549:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4557:3:4","type":""}],"src":"4415:366:4"},{"body":{"nodeType":"YulBlock","src":"4933:220:4","statements":[{"nodeType":"YulAssignment","src":"4943:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5009:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5014:2:4","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4950:58:4"},"nodeType":"YulFunctionCall","src":"4950:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4943:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5115:3:4"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"5026:88:4"},"nodeType":"YulFunctionCall","src":"5026:93:4"},"nodeType":"YulExpressionStatement","src":"5026:93:4"},{"nodeType":"YulAssignment","src":"5128:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5139:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5144:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5135:3:4"},"nodeType":"YulFunctionCall","src":"5135:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5128:3:4"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4921:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4929:3:4","type":""}],"src":"4787:366:4"},{"body":{"nodeType":"YulBlock","src":"5305:220:4","statements":[{"nodeType":"YulAssignment","src":"5315:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5381:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5386:2:4","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5322:58:4"},"nodeType":"YulFunctionCall","src":"5322:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5315:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5487:3:4"}],"functionName":{"name":"store_literal_in_memory_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79","nodeType":"YulIdentifier","src":"5398:88:4"},"nodeType":"YulFunctionCall","src":"5398:93:4"},"nodeType":"YulExpressionStatement","src":"5398:93:4"},{"nodeType":"YulAssignment","src":"5500:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5511:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5516:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5507:3:4"},"nodeType":"YulFunctionCall","src":"5507:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5500:3:4"}]}]},"name":"abi_encode_t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5293:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5301:3:4","type":""}],"src":"5159:366:4"},{"body":{"nodeType":"YulBlock","src":"5677:220:4","statements":[{"nodeType":"YulAssignment","src":"5687:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5753:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5758:2:4","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5694:58:4"},"nodeType":"YulFunctionCall","src":"5694:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5687:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5859:3:4"}],"functionName":{"name":"store_literal_in_memory_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde","nodeType":"YulIdentifier","src":"5770:88:4"},"nodeType":"YulFunctionCall","src":"5770:93:4"},"nodeType":"YulExpressionStatement","src":"5770:93:4"},{"nodeType":"YulAssignment","src":"5872:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5883:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5888:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5879:3:4"},"nodeType":"YulFunctionCall","src":"5879:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5872:3:4"}]}]},"name":"abi_encode_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5665:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5673:3:4","type":""}],"src":"5531:366:4"},{"body":{"nodeType":"YulBlock","src":"6049:220:4","statements":[{"nodeType":"YulAssignment","src":"6059:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6125:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"6130:2:4","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6066:58:4"},"nodeType":"YulFunctionCall","src":"6066:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6059:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6231:3:4"}],"functionName":{"name":"store_literal_in_memory_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f","nodeType":"YulIdentifier","src":"6142:88:4"},"nodeType":"YulFunctionCall","src":"6142:93:4"},"nodeType":"YulExpressionStatement","src":"6142:93:4"},{"nodeType":"YulAssignment","src":"6244:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6255:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"6260:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6251:3:4"},"nodeType":"YulFunctionCall","src":"6251:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6244:3:4"}]}]},"name":"abi_encode_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6037:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6045:3:4","type":""}],"src":"5903:366:4"},{"body":{"nodeType":"YulBlock","src":"6421:220:4","statements":[{"nodeType":"YulAssignment","src":"6431:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6497:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"6502:2:4","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6438:58:4"},"nodeType":"YulFunctionCall","src":"6438:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6431:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6603:3:4"}],"functionName":{"name":"store_literal_in_memory_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","nodeType":"YulIdentifier","src":"6514:88:4"},"nodeType":"YulFunctionCall","src":"6514:93:4"},"nodeType":"YulExpressionStatement","src":"6514:93:4"},{"nodeType":"YulAssignment","src":"6616:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6627:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"6632:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6623:3:4"},"nodeType":"YulFunctionCall","src":"6623:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6616:3:4"}]}]},"name":"abi_encode_t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6409:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6417:3:4","type":""}],"src":"6275:366:4"},{"body":{"nodeType":"YulBlock","src":"6793:220:4","statements":[{"nodeType":"YulAssignment","src":"6803:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6869:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"6874:2:4","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6810:58:4"},"nodeType":"YulFunctionCall","src":"6810:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6803:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6975:3:4"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"6886:88:4"},"nodeType":"YulFunctionCall","src":"6886:93:4"},"nodeType":"YulExpressionStatement","src":"6886:93:4"},{"nodeType":"YulAssignment","src":"6988:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6999:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"7004:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6995:3:4"},"nodeType":"YulFunctionCall","src":"6995:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6988:3:4"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6781:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6789:3:4","type":""}],"src":"6647:366:4"},{"body":{"nodeType":"YulBlock","src":"7165:220:4","statements":[{"nodeType":"YulAssignment","src":"7175:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7241:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"7246:2:4","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7182:58:4"},"nodeType":"YulFunctionCall","src":"7182:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7175:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7347:3:4"}],"functionName":{"name":"store_literal_in_memory_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700","nodeType":"YulIdentifier","src":"7258:88:4"},"nodeType":"YulFunctionCall","src":"7258:93:4"},"nodeType":"YulExpressionStatement","src":"7258:93:4"},{"nodeType":"YulAssignment","src":"7360:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7371:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7367:3:4"},"nodeType":"YulFunctionCall","src":"7367:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7360:3:4"}]}]},"name":"abi_encode_t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7153:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7161:3:4","type":""}],"src":"7019:366:4"},{"body":{"nodeType":"YulBlock","src":"7537:220:4","statements":[{"nodeType":"YulAssignment","src":"7547:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7613:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"7618:2:4","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7554:58:4"},"nodeType":"YulFunctionCall","src":"7554:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7547:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7719:3:4"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"7630:88:4"},"nodeType":"YulFunctionCall","src":"7630:93:4"},"nodeType":"YulExpressionStatement","src":"7630:93:4"},{"nodeType":"YulAssignment","src":"7732:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7743:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"7748:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:4"},"nodeType":"YulFunctionCall","src":"7739:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7732:3:4"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7525:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7533:3:4","type":""}],"src":"7391:366:4"},{"body":{"nodeType":"YulBlock","src":"7828:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7845:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7868:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7850:17:4"},"nodeType":"YulFunctionCall","src":"7850:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7838:6:4"},"nodeType":"YulFunctionCall","src":"7838:37:4"},"nodeType":"YulExpressionStatement","src":"7838:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7816:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7823:3:4","type":""}],"src":"7763:118:4"},{"body":{"nodeType":"YulBlock","src":"7985:124:4","statements":[{"nodeType":"YulAssignment","src":"7995:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8007:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"8018:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8003:3:4"},"nodeType":"YulFunctionCall","src":"8003:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7995:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8075:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8088:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"8099:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8084:3:4"},"nodeType":"YulFunctionCall","src":"8084:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8031:43:4"},"nodeType":"YulFunctionCall","src":"8031:71:4"},"nodeType":"YulExpressionStatement","src":"8031:71:4"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7957:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7969:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7980:4:4","type":""}],"src":"7887:222:4"},{"body":{"nodeType":"YulBlock","src":"8226:137:4","statements":[{"nodeType":"YulAssignment","src":"8236:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8248:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"8259:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8244:3:4"},"nodeType":"YulFunctionCall","src":"8244:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8236:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8329:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8342:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"8353:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8338:3:4"},"nodeType":"YulFunctionCall","src":"8338:17:4"}],"functionName":{"name":"abi_encode_t_enum$_ClaimStatus_$207_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"8272:56:4"},"nodeType":"YulFunctionCall","src":"8272:84:4"},"nodeType":"YulExpressionStatement","src":"8272:84:4"}]},"name":"abi_encode_tuple_t_enum$_ClaimStatus_$207__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8198:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8210:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8221:4:4","type":""}],"src":"8115:248:4"},{"body":{"nodeType":"YulBlock","src":"8540:248:4","statements":[{"nodeType":"YulAssignment","src":"8550:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8562:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"8573:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8558:3:4"},"nodeType":"YulFunctionCall","src":"8558:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8550:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8597:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"8608:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8593:3:4"},"nodeType":"YulFunctionCall","src":"8593:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8616:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"8622:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:4"},"nodeType":"YulFunctionCall","src":"8612:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8586:6:4"},"nodeType":"YulFunctionCall","src":"8586:47:4"},"nodeType":"YulExpressionStatement","src":"8586:47:4"},{"nodeType":"YulAssignment","src":"8642:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8776:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8650:124:4"},"nodeType":"YulFunctionCall","src":"8650:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8642:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8520:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8535:4:4","type":""}],"src":"8369:419:4"},{"body":{"nodeType":"YulBlock","src":"8965:248:4","statements":[{"nodeType":"YulAssignment","src":"8975:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8987:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"8998:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8983:3:4"},"nodeType":"YulFunctionCall","src":"8983:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8975:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9022:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"9033:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9018:3:4"},"nodeType":"YulFunctionCall","src":"9018:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9041:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"9047:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9037:3:4"},"nodeType":"YulFunctionCall","src":"9037:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9011:6:4"},"nodeType":"YulFunctionCall","src":"9011:47:4"},"nodeType":"YulExpressionStatement","src":"9011:47:4"},{"nodeType":"YulAssignment","src":"9067:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9201:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9075:124:4"},"nodeType":"YulFunctionCall","src":"9075:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9067:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8945:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8960:4:4","type":""}],"src":"8794:419:4"},{"body":{"nodeType":"YulBlock","src":"9390:248:4","statements":[{"nodeType":"YulAssignment","src":"9400:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9412:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"9423:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9408:3:4"},"nodeType":"YulFunctionCall","src":"9408:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9400:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9447:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"9458:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9443:3:4"},"nodeType":"YulFunctionCall","src":"9443:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9466:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"9472:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9462:3:4"},"nodeType":"YulFunctionCall","src":"9462:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9436:6:4"},"nodeType":"YulFunctionCall","src":"9436:47:4"},"nodeType":"YulExpressionStatement","src":"9436:47:4"},{"nodeType":"YulAssignment","src":"9492:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9626:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9500:124:4"},"nodeType":"YulFunctionCall","src":"9500:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9492:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9370:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9385:4:4","type":""}],"src":"9219:419:4"},{"body":{"nodeType":"YulBlock","src":"9815:248:4","statements":[{"nodeType":"YulAssignment","src":"9825:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9837:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"9848:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9833:3:4"},"nodeType":"YulFunctionCall","src":"9833:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9825:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9872:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"9883:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9868:3:4"},"nodeType":"YulFunctionCall","src":"9868:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9891:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"9897:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9887:3:4"},"nodeType":"YulFunctionCall","src":"9887:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9861:6:4"},"nodeType":"YulFunctionCall","src":"9861:47:4"},"nodeType":"YulExpressionStatement","src":"9861:47:4"},{"nodeType":"YulAssignment","src":"9917:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10051:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9925:124:4"},"nodeType":"YulFunctionCall","src":"9925:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9917:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9795:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9810:4:4","type":""}],"src":"9644:419:4"},{"body":{"nodeType":"YulBlock","src":"10240:248:4","statements":[{"nodeType":"YulAssignment","src":"10250:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10262:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"10273:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10258:3:4"},"nodeType":"YulFunctionCall","src":"10258:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10250:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10297:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"10308:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10293:3:4"},"nodeType":"YulFunctionCall","src":"10293:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10316:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"10322:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10312:3:4"},"nodeType":"YulFunctionCall","src":"10312:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10286:6:4"},"nodeType":"YulFunctionCall","src":"10286:47:4"},"nodeType":"YulExpressionStatement","src":"10286:47:4"},{"nodeType":"YulAssignment","src":"10342:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10476:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10350:124:4"},"nodeType":"YulFunctionCall","src":"10350:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10342:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10220:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10235:4:4","type":""}],"src":"10069:419:4"},{"body":{"nodeType":"YulBlock","src":"10665:248:4","statements":[{"nodeType":"YulAssignment","src":"10675:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10687:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"10698:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10683:3:4"},"nodeType":"YulFunctionCall","src":"10683:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10675:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10722:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"10733:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10718:3:4"},"nodeType":"YulFunctionCall","src":"10718:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10741:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"10747:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10737:3:4"},"nodeType":"YulFunctionCall","src":"10737:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10711:6:4"},"nodeType":"YulFunctionCall","src":"10711:47:4"},"nodeType":"YulExpressionStatement","src":"10711:47:4"},{"nodeType":"YulAssignment","src":"10767:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10901:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10775:124:4"},"nodeType":"YulFunctionCall","src":"10775:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10767:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10645:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10660:4:4","type":""}],"src":"10494:419:4"},{"body":{"nodeType":"YulBlock","src":"11090:248:4","statements":[{"nodeType":"YulAssignment","src":"11100:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11112:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"11123:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11108:3:4"},"nodeType":"YulFunctionCall","src":"11108:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11100:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11147:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"11158:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11143:3:4"},"nodeType":"YulFunctionCall","src":"11143:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11166:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"11172:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11162:3:4"},"nodeType":"YulFunctionCall","src":"11162:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11136:6:4"},"nodeType":"YulFunctionCall","src":"11136:47:4"},"nodeType":"YulExpressionStatement","src":"11136:47:4"},{"nodeType":"YulAssignment","src":"11192:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11326:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11200:124:4"},"nodeType":"YulFunctionCall","src":"11200:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11192:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11070:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11085:4:4","type":""}],"src":"10919:419:4"},{"body":{"nodeType":"YulBlock","src":"11515:248:4","statements":[{"nodeType":"YulAssignment","src":"11525:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11537:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"11548:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11533:3:4"},"nodeType":"YulFunctionCall","src":"11533:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11525:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11572:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"11583:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11568:3:4"},"nodeType":"YulFunctionCall","src":"11568:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11591:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"11597:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11587:3:4"},"nodeType":"YulFunctionCall","src":"11587:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11561:6:4"},"nodeType":"YulFunctionCall","src":"11561:47:4"},"nodeType":"YulExpressionStatement","src":"11561:47:4"},{"nodeType":"YulAssignment","src":"11617:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11751:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11625:124:4"},"nodeType":"YulFunctionCall","src":"11625:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11617:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11495:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11510:4:4","type":""}],"src":"11344:419:4"},{"body":{"nodeType":"YulBlock","src":"11940:248:4","statements":[{"nodeType":"YulAssignment","src":"11950:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11962:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"11973:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11958:3:4"},"nodeType":"YulFunctionCall","src":"11958:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11950:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11997:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12008:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11993:3:4"},"nodeType":"YulFunctionCall","src":"11993:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12016:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"12022:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12012:3:4"},"nodeType":"YulFunctionCall","src":"12012:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11986:6:4"},"nodeType":"YulFunctionCall","src":"11986:47:4"},"nodeType":"YulExpressionStatement","src":"11986:47:4"},{"nodeType":"YulAssignment","src":"12042:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12176:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12050:124:4"},"nodeType":"YulFunctionCall","src":"12050:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12042:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11920:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11935:4:4","type":""}],"src":"11769:419:4"},{"body":{"nodeType":"YulBlock","src":"12292:124:4","statements":[{"nodeType":"YulAssignment","src":"12302:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12314:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12325:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12310:3:4"},"nodeType":"YulFunctionCall","src":"12310:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12302:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12382:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12395:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12406:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12391:3:4"},"nodeType":"YulFunctionCall","src":"12391:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12338:43:4"},"nodeType":"YulFunctionCall","src":"12338:71:4"},"nodeType":"YulExpressionStatement","src":"12338:71:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12264:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12276:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12287:4:4","type":""}],"src":"12194:222:4"},{"body":{"nodeType":"YulBlock","src":"12682:614:4","statements":[{"nodeType":"YulAssignment","src":"12692:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12704:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12715:3:4","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12700:3:4"},"nodeType":"YulFunctionCall","src":"12700:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12692:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12773:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12786:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12797:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12782:3:4"},"nodeType":"YulFunctionCall","src":"12782:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12729:43:4"},"nodeType":"YulFunctionCall","src":"12729:71:4"},"nodeType":"YulExpressionStatement","src":"12729:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12854:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12867:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12863:3:4"},"nodeType":"YulFunctionCall","src":"12863:18:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12810:43:4"},"nodeType":"YulFunctionCall","src":"12810:72:4"},"nodeType":"YulExpressionStatement","src":"12810:72:4"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12936:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12949:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12960:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12945:3:4"},"nodeType":"YulFunctionCall","src":"12945:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12892:43:4"},"nodeType":"YulFunctionCall","src":"12892:72:4"},"nodeType":"YulExpressionStatement","src":"12892:72:4"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13018:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13031:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"13042:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13027:3:4"},"nodeType":"YulFunctionCall","src":"13027:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12974:43:4"},"nodeType":"YulFunctionCall","src":"12974:72:4"},"nodeType":"YulExpressionStatement","src":"12974:72:4"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13100:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13113:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"13124:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13109:3:4"},"nodeType":"YulFunctionCall","src":"13109:19:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13056:43:4"},"nodeType":"YulFunctionCall","src":"13056:73:4"},"nodeType":"YulExpressionStatement","src":"13056:73:4"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"13183:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13196:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"13207:3:4","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13192:3:4"},"nodeType":"YulFunctionCall","src":"13192:19:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13139:43:4"},"nodeType":"YulFunctionCall","src":"13139:73:4"},"nodeType":"YulExpressionStatement","src":"13139:73:4"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"13260:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13273:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"13284:3:4","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13269:3:4"},"nodeType":"YulFunctionCall","src":"13269:19:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"13222:37:4"},"nodeType":"YulFunctionCall","src":"13222:67:4"},"nodeType":"YulExpressionStatement","src":"13222:67:4"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12606:9:4","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12618:6:4","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12626:6:4","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12634:6:4","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12642:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12650:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12658:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12666:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12677:4:4","type":""}],"src":"12422:874:4"},{"body":{"nodeType":"YulBlock","src":"13428:206:4","statements":[{"nodeType":"YulAssignment","src":"13438:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13450:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"13461:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13446:3:4"},"nodeType":"YulFunctionCall","src":"13446:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13438:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13518:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13531:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"13542:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13527:3:4"},"nodeType":"YulFunctionCall","src":"13527:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13474:43:4"},"nodeType":"YulFunctionCall","src":"13474:71:4"},"nodeType":"YulExpressionStatement","src":"13474:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13599:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13612:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"13623:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13608:3:4"},"nodeType":"YulFunctionCall","src":"13608:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13555:43:4"},"nodeType":"YulFunctionCall","src":"13555:72:4"},"nodeType":"YulExpressionStatement","src":"13555:72:4"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13392:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13404:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13412:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13423:4:4","type":""}],"src":"13302:332:4"},{"body":{"nodeType":"YulBlock","src":"13911:621:4","statements":[{"nodeType":"YulAssignment","src":"13921:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13933:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"13944:3:4","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13929:3:4"},"nodeType":"YulFunctionCall","src":"13929:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13921:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14002:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14015:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"14026:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14011:3:4"},"nodeType":"YulFunctionCall","src":"14011:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13958:43:4"},"nodeType":"YulFunctionCall","src":"13958:71:4"},"nodeType":"YulExpressionStatement","src":"13958:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14083:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14096:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"14107:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14092:3:4"},"nodeType":"YulFunctionCall","src":"14092:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14039:43:4"},"nodeType":"YulFunctionCall","src":"14039:72:4"},"nodeType":"YulExpressionStatement","src":"14039:72:4"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14165:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14178:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"14189:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14174:3:4"},"nodeType":"YulFunctionCall","src":"14174:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14121:43:4"},"nodeType":"YulFunctionCall","src":"14121:72:4"},"nodeType":"YulExpressionStatement","src":"14121:72:4"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14247:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14260:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"14271:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14256:3:4"},"nodeType":"YulFunctionCall","src":"14256:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14203:43:4"},"nodeType":"YulFunctionCall","src":"14203:72:4"},"nodeType":"YulExpressionStatement","src":"14203:72:4"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14342:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14355:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"14366:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14351:3:4"},"nodeType":"YulFunctionCall","src":"14351:19:4"}],"functionName":{"name":"abi_encode_t_enum$_ClaimStatus_$207_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"14285:56:4"},"nodeType":"YulFunctionCall","src":"14285:86:4"},"nodeType":"YulExpressionStatement","src":"14285:86:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14392:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"14403:3:4","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14388:3:4"},"nodeType":"YulFunctionCall","src":"14388:19:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14413:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"14419:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14409:3:4"},"nodeType":"YulFunctionCall","src":"14409:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14381:6:4"},"nodeType":"YulFunctionCall","src":"14381:49:4"},"nodeType":"YulExpressionStatement","src":"14381:49:4"},{"nodeType":"YulAssignment","src":"14439:86:4","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"14511:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"14520:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14447:63:4"},"nodeType":"YulFunctionCall","src":"14447:78:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14439:4:4"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_ClaimStatus_$207_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13843:9:4","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13855:6:4","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13863:6:4","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13871:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13879:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13887:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13895:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13906:4:4","type":""}],"src":"13640:892:4"},{"body":{"nodeType":"YulBlock","src":"14579:88:4","statements":[{"nodeType":"YulAssignment","src":"14589:30:4","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"14599:18:4"},"nodeType":"YulFunctionCall","src":"14599:20:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14589:6:4"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14648:6:4"},{"name":"size","nodeType":"YulIdentifier","src":"14656:4:4"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"14628:19:4"},"nodeType":"YulFunctionCall","src":"14628:33:4"},"nodeType":"YulExpressionStatement","src":"14628:33:4"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"14563:4:4","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"14572:6:4","type":""}],"src":"14538:129:4"},{"body":{"nodeType":"YulBlock","src":"14713:35:4","statements":[{"nodeType":"YulAssignment","src":"14723:19:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14739:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14733:5:4"},"nodeType":"YulFunctionCall","src":"14733:9:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14723:6:4"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"14706:6:4","type":""}],"src":"14673:75:4"},{"body":{"nodeType":"YulBlock","src":"14821:241:4","statements":[{"body":{"nodeType":"YulBlock","src":"14926:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14928:16:4"},"nodeType":"YulFunctionCall","src":"14928:18:4"},"nodeType":"YulExpressionStatement","src":"14928:18:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14898:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14906:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14895:2:4"},"nodeType":"YulFunctionCall","src":"14895:30:4"},"nodeType":"YulIf","src":"14892:56:4"},{"nodeType":"YulAssignment","src":"14958:37:4","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14988:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14966:21:4"},"nodeType":"YulFunctionCall","src":"14966:29:4"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14958:4:4"}]},{"nodeType":"YulAssignment","src":"15032:23:4","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"15044:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"15050:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15040:3:4"},"nodeType":"YulFunctionCall","src":"15040:15:4"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"15032:4:4"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"14805:6:4","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"14816:4:4","type":""}],"src":"14754:308:4"},{"body":{"nodeType":"YulBlock","src":"15127:40:4","statements":[{"nodeType":"YulAssignment","src":"15138:22:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15154:5:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15148:5:4"},"nodeType":"YulFunctionCall","src":"15148:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15138:6:4"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15110:5:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15120:6:4","type":""}],"src":"15068:99:4"},{"body":{"nodeType":"YulBlock","src":"15269:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15286:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"15291:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15279:6:4"},"nodeType":"YulFunctionCall","src":"15279:19:4"},"nodeType":"YulExpressionStatement","src":"15279:19:4"},{"nodeType":"YulAssignment","src":"15307:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15326:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"15331:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15322:3:4"},"nodeType":"YulFunctionCall","src":"15322:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15307:11:4"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15241:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"15246:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15257:11:4","type":""}],"src":"15173:169:4"},{"body":{"nodeType":"YulBlock","src":"15392:261:4","statements":[{"nodeType":"YulAssignment","src":"15402:25:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15425:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15407:17:4"},"nodeType":"YulFunctionCall","src":"15407:20:4"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15402:1:4"}]},{"nodeType":"YulAssignment","src":"15436:25:4","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15459:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15441:17:4"},"nodeType":"YulFunctionCall","src":"15441:20:4"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15436:1:4"}]},{"body":{"nodeType":"YulBlock","src":"15599:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15601:16:4"},"nodeType":"YulFunctionCall","src":"15601:18:4"},"nodeType":"YulExpressionStatement","src":"15601:18:4"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15520:1:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15527:66:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"15595:1:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15523:3:4"},"nodeType":"YulFunctionCall","src":"15523:74:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15517:2:4"},"nodeType":"YulFunctionCall","src":"15517:81:4"},"nodeType":"YulIf","src":"15514:107:4"},{"nodeType":"YulAssignment","src":"15631:16:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15642:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"15645:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15638:3:4"},"nodeType":"YulFunctionCall","src":"15638:9:4"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15631:3:4"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15379:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"15382:1:4","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15388:3:4","type":""}],"src":"15348:305:4"},{"body":{"nodeType":"YulBlock","src":"15701:143:4","statements":[{"nodeType":"YulAssignment","src":"15711:25:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15734:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15716:17:4"},"nodeType":"YulFunctionCall","src":"15716:20:4"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15711:1:4"}]},{"nodeType":"YulAssignment","src":"15745:25:4","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15768:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15750:17:4"},"nodeType":"YulFunctionCall","src":"15750:20:4"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15745:1:4"}]},{"body":{"nodeType":"YulBlock","src":"15792:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"15794:16:4"},"nodeType":"YulFunctionCall","src":"15794:18:4"},"nodeType":"YulExpressionStatement","src":"15794:18:4"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15789:1:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15782:6:4"},"nodeType":"YulFunctionCall","src":"15782:9:4"},"nodeType":"YulIf","src":"15779:35:4"},{"nodeType":"YulAssignment","src":"15824:14:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15833:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"15836:1:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15829:3:4"},"nodeType":"YulFunctionCall","src":"15829:9:4"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"15824:1:4"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15690:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"15693:1:4","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"15699:1:4","type":""}],"src":"15659:185:4"},{"body":{"nodeType":"YulBlock","src":"15898:300:4","statements":[{"nodeType":"YulAssignment","src":"15908:25:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15931:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15913:17:4"},"nodeType":"YulFunctionCall","src":"15913:20:4"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15908:1:4"}]},{"nodeType":"YulAssignment","src":"15942:25:4","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15965:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15947:17:4"},"nodeType":"YulFunctionCall","src":"15947:20:4"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15942:1:4"}]},{"body":{"nodeType":"YulBlock","src":"16140:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16142:16:4"},"nodeType":"YulFunctionCall","src":"16142:18:4"},"nodeType":"YulExpressionStatement","src":"16142:18:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16052:1:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16045:6:4"},"nodeType":"YulFunctionCall","src":"16045:9:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16038:6:4"},"nodeType":"YulFunctionCall","src":"16038:17:4"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16060:1:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16067:66:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"16135:1:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16063:3:4"},"nodeType":"YulFunctionCall","src":"16063:74:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16057:2:4"},"nodeType":"YulFunctionCall","src":"16057:81:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16034:3:4"},"nodeType":"YulFunctionCall","src":"16034:105:4"},"nodeType":"YulIf","src":"16031:131:4"},{"nodeType":"YulAssignment","src":"16172:20:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16187:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"16190:1:4"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16183:3:4"},"nodeType":"YulFunctionCall","src":"16183:9:4"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16172:7:4"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15881:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"15884:1:4","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"15890:7:4","type":""}],"src":"15850:348:4"},{"body":{"nodeType":"YulBlock","src":"16249:146:4","statements":[{"nodeType":"YulAssignment","src":"16259:25:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16282:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16264:17:4"},"nodeType":"YulFunctionCall","src":"16264:20:4"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16259:1:4"}]},{"nodeType":"YulAssignment","src":"16293:25:4","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16316:1:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16298:17:4"},"nodeType":"YulFunctionCall","src":"16298:20:4"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16293:1:4"}]},{"body":{"nodeType":"YulBlock","src":"16340:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16342:16:4"},"nodeType":"YulFunctionCall","src":"16342:18:4"},"nodeType":"YulExpressionStatement","src":"16342:18:4"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16334:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"16337:1:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16331:2:4"},"nodeType":"YulFunctionCall","src":"16331:8:4"},"nodeType":"YulIf","src":"16328:34:4"},{"nodeType":"YulAssignment","src":"16372:17:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16384:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"16387:1:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16380:3:4"},"nodeType":"YulFunctionCall","src":"16380:9:4"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16372:4:4"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16235:1:4","type":""},{"name":"y","nodeType":"YulTypedName","src":"16238:1:4","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16244:4:4","type":""}],"src":"16204:191:4"},{"body":{"nodeType":"YulBlock","src":"16446:51:4","statements":[{"nodeType":"YulAssignment","src":"16456:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16485:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"16467:17:4"},"nodeType":"YulFunctionCall","src":"16467:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16456:7:4"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16428:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16438:7:4","type":""}],"src":"16401:96:4"},{"body":{"nodeType":"YulBlock","src":"16545:48:4","statements":[{"nodeType":"YulAssignment","src":"16555:32:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16580:5:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16573:6:4"},"nodeType":"YulFunctionCall","src":"16573:13:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16566:6:4"},"nodeType":"YulFunctionCall","src":"16566:21:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16555:7:4"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16527:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16537:7:4","type":""}],"src":"16503:90:4"},{"body":{"nodeType":"YulBlock","src":"16659:81:4","statements":[{"nodeType":"YulAssignment","src":"16669:16:4","value":{"name":"value","nodeType":"YulIdentifier","src":"16680:5:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16669:7:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16728:5:4"}],"functionName":{"name":"validator_assert_t_enum$_ClaimStatus_$207","nodeType":"YulIdentifier","src":"16686:41:4"},"nodeType":"YulFunctionCall","src":"16686:48:4"},"nodeType":"YulExpressionStatement","src":"16686:48:4"}]},"name":"cleanup_t_enum$_ClaimStatus_$207","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16641:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16651:7:4","type":""}],"src":"16599:141:4"},{"body":{"nodeType":"YulBlock","src":"16791:81:4","statements":[{"nodeType":"YulAssignment","src":"16801:65:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16816:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"16823:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16812:3:4"},"nodeType":"YulFunctionCall","src":"16812:54:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16801:7:4"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16773:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16783:7:4","type":""}],"src":"16746:126:4"},{"body":{"nodeType":"YulBlock","src":"16923:32:4","statements":[{"nodeType":"YulAssignment","src":"16933:16:4","value":{"name":"value","nodeType":"YulIdentifier","src":"16944:5:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16933:7:4"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16905:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16915:7:4","type":""}],"src":"16878:77:4"},{"body":{"nodeType":"YulBlock","src":"17034:68:4","statements":[{"nodeType":"YulAssignment","src":"17044:52:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17090:5:4"}],"functionName":{"name":"cleanup_t_enum$_ClaimStatus_$207","nodeType":"YulIdentifier","src":"17057:32:4"},"nodeType":"YulFunctionCall","src":"17057:39:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17044:9:4"}]}]},"name":"convert_t_enum$_ClaimStatus_$207_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17014:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17024:9:4","type":""}],"src":"16961:141:4"},{"body":{"nodeType":"YulBlock","src":"17159:103:4","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17182:3:4"},{"name":"src","nodeType":"YulIdentifier","src":"17187:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"17192:6:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17169:12:4"},"nodeType":"YulFunctionCall","src":"17169:30:4"},"nodeType":"YulExpressionStatement","src":"17169:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17240:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"17245:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17236:3:4"},"nodeType":"YulFunctionCall","src":"17236:16:4"},{"kind":"number","nodeType":"YulLiteral","src":"17254:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17229:6:4"},"nodeType":"YulFunctionCall","src":"17229:27:4"},"nodeType":"YulExpressionStatement","src":"17229:27:4"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17141:3:4","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17146:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"17151:6:4","type":""}],"src":"17108:154:4"},{"body":{"nodeType":"YulBlock","src":"17317:258:4","statements":[{"nodeType":"YulVariableDeclaration","src":"17327:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"17336:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17331:1:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"17396:63:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17421:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"17426:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17417:3:4"},"nodeType":"YulFunctionCall","src":"17417:11:4"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17440:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"17445:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17436:3:4"},"nodeType":"YulFunctionCall","src":"17436:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17430:5:4"},"nodeType":"YulFunctionCall","src":"17430:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17410:6:4"},"nodeType":"YulFunctionCall","src":"17410:39:4"},"nodeType":"YulExpressionStatement","src":"17410:39:4"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17357:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"17360:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17354:2:4"},"nodeType":"YulFunctionCall","src":"17354:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17368:19:4","statements":[{"nodeType":"YulAssignment","src":"17370:15:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17379:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"17382:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17375:3:4"},"nodeType":"YulFunctionCall","src":"17375:10:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17370:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"17350:3:4","statements":[]},"src":"17346:113:4"},{"body":{"nodeType":"YulBlock","src":"17493:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17543:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"17548:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17539:3:4"},"nodeType":"YulFunctionCall","src":"17539:16:4"},{"kind":"number","nodeType":"YulLiteral","src":"17557:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17532:6:4"},"nodeType":"YulFunctionCall","src":"17532:27:4"},"nodeType":"YulExpressionStatement","src":"17532:27:4"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17474:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"17477:6:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17471:2:4"},"nodeType":"YulFunctionCall","src":"17471:13:4"},"nodeType":"YulIf","src":"17468:101:4"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17299:3:4","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17304:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"17309:6:4","type":""}],"src":"17268:307:4"},{"body":{"nodeType":"YulBlock","src":"17632:269:4","statements":[{"nodeType":"YulAssignment","src":"17642:22:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17656:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"17662:1:4","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17652:3:4"},"nodeType":"YulFunctionCall","src":"17652:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17642:6:4"}]},{"nodeType":"YulVariableDeclaration","src":"17673:38:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17703:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"17709:1:4","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17699:3:4"},"nodeType":"YulFunctionCall","src":"17699:12:4"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"17677:18:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"17750:51:4","statements":[{"nodeType":"YulAssignment","src":"17764:27:4","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17778:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"17786:4:4","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17774:3:4"},"nodeType":"YulFunctionCall","src":"17774:17:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17764:6:4"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"17730:18:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17723:6:4"},"nodeType":"YulFunctionCall","src":"17723:26:4"},"nodeType":"YulIf","src":"17720:81:4"},{"body":{"nodeType":"YulBlock","src":"17853:42:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"17867:16:4"},"nodeType":"YulFunctionCall","src":"17867:18:4"},"nodeType":"YulExpressionStatement","src":"17867:18:4"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"17817:18:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17840:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"17848:2:4","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17837:2:4"},"nodeType":"YulFunctionCall","src":"17837:14:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17814:2:4"},"nodeType":"YulFunctionCall","src":"17814:38:4"},"nodeType":"YulIf","src":"17811:84:4"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"17616:4:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17625:6:4","type":""}],"src":"17581:320:4"},{"body":{"nodeType":"YulBlock","src":"17950:238:4","statements":[{"nodeType":"YulVariableDeclaration","src":"17960:58:4","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17982:6:4"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18012:4:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17990:21:4"},"nodeType":"YulFunctionCall","src":"17990:27:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17978:3:4"},"nodeType":"YulFunctionCall","src":"17978:40:4"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"17964:10:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"18129:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18131:16:4"},"nodeType":"YulFunctionCall","src":"18131:18:4"},"nodeType":"YulExpressionStatement","src":"18131:18:4"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18072:10:4"},{"kind":"number","nodeType":"YulLiteral","src":"18084:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18069:2:4"},"nodeType":"YulFunctionCall","src":"18069:34:4"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18108:10:4"},{"name":"memPtr","nodeType":"YulIdentifier","src":"18120:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18105:2:4"},"nodeType":"YulFunctionCall","src":"18105:22:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18066:2:4"},"nodeType":"YulFunctionCall","src":"18066:62:4"},"nodeType":"YulIf","src":"18063:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18167:2:4","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18171:10:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18160:6:4"},"nodeType":"YulFunctionCall","src":"18160:22:4"},"nodeType":"YulExpressionStatement","src":"18160:22:4"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17936:6:4","type":""},{"name":"size","nodeType":"YulTypedName","src":"17944:4:4","type":""}],"src":"17907:281:4"},{"body":{"nodeType":"YulBlock","src":"18237:190:4","statements":[{"nodeType":"YulAssignment","src":"18247:33:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18274:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18256:17:4"},"nodeType":"YulFunctionCall","src":"18256:24:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18247:5:4"}]},{"body":{"nodeType":"YulBlock","src":"18370:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18372:16:4"},"nodeType":"YulFunctionCall","src":"18372:18:4"},"nodeType":"YulExpressionStatement","src":"18372:18:4"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18295:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"18302:66:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18292:2:4"},"nodeType":"YulFunctionCall","src":"18292:77:4"},"nodeType":"YulIf","src":"18289:103:4"},{"nodeType":"YulAssignment","src":"18401:20:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18412:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"18419:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18408:3:4"},"nodeType":"YulFunctionCall","src":"18408:13:4"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18401:3:4"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18223:5:4","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18233:3:4","type":""}],"src":"18194:233:4"},{"body":{"nodeType":"YulBlock","src":"18461:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18478:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18481:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18471:6:4"},"nodeType":"YulFunctionCall","src":"18471:88:4"},"nodeType":"YulExpressionStatement","src":"18471:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18575:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18578:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18568:6:4"},"nodeType":"YulFunctionCall","src":"18568:15:4"},"nodeType":"YulExpressionStatement","src":"18568:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18599:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18602:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18592:6:4"},"nodeType":"YulFunctionCall","src":"18592:15:4"},"nodeType":"YulExpressionStatement","src":"18592:15:4"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18433:180:4"},{"body":{"nodeType":"YulBlock","src":"18647:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18664:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18667:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18657:6:4"},"nodeType":"YulFunctionCall","src":"18657:88:4"},"nodeType":"YulExpressionStatement","src":"18657:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18761:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18764:4:4","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18754:6:4"},"nodeType":"YulFunctionCall","src":"18754:15:4"},"nodeType":"YulExpressionStatement","src":"18754:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18785:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18788:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18778:6:4"},"nodeType":"YulFunctionCall","src":"18778:15:4"},"nodeType":"YulExpressionStatement","src":"18778:15:4"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"18619:180:4"},{"body":{"nodeType":"YulBlock","src":"18833:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18850:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18853:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18843:6:4"},"nodeType":"YulFunctionCall","src":"18843:88:4"},"nodeType":"YulExpressionStatement","src":"18843:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18947:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18950:4:4","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18940:6:4"},"nodeType":"YulFunctionCall","src":"18940:15:4"},"nodeType":"YulExpressionStatement","src":"18940:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18971:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18974:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18964:6:4"},"nodeType":"YulFunctionCall","src":"18964:15:4"},"nodeType":"YulExpressionStatement","src":"18964:15:4"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"18805:180:4"},{"body":{"nodeType":"YulBlock","src":"19019:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19036:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19039:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19029:6:4"},"nodeType":"YulFunctionCall","src":"19029:88:4"},"nodeType":"YulExpressionStatement","src":"19029:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19133:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19136:4:4","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19126:6:4"},"nodeType":"YulFunctionCall","src":"19126:15:4"},"nodeType":"YulExpressionStatement","src":"19126:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19157:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19160:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19150:6:4"},"nodeType":"YulFunctionCall","src":"19150:15:4"},"nodeType":"YulExpressionStatement","src":"19150:15:4"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"18991:180:4"},{"body":{"nodeType":"YulBlock","src":"19205:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19222:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19225:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19215:6:4"},"nodeType":"YulFunctionCall","src":"19215:88:4"},"nodeType":"YulExpressionStatement","src":"19215:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19319:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19322:4:4","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19312:6:4"},"nodeType":"YulFunctionCall","src":"19312:15:4"},"nodeType":"YulExpressionStatement","src":"19312:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19343:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19346:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19336:6:4"},"nodeType":"YulFunctionCall","src":"19336:15:4"},"nodeType":"YulExpressionStatement","src":"19336:15:4"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19177:180:4"},{"body":{"nodeType":"YulBlock","src":"19391:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19408:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19411:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19401:6:4"},"nodeType":"YulFunctionCall","src":"19401:88:4"},"nodeType":"YulExpressionStatement","src":"19401:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19505:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19508:4:4","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19498:6:4"},"nodeType":"YulFunctionCall","src":"19498:15:4"},"nodeType":"YulExpressionStatement","src":"19498:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19529:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19532:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19522:6:4"},"nodeType":"YulFunctionCall","src":"19522:15:4"},"nodeType":"YulExpressionStatement","src":"19522:15:4"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"19363:180:4"},{"body":{"nodeType":"YulBlock","src":"19638:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19655:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19658:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19648:6:4"},"nodeType":"YulFunctionCall","src":"19648:12:4"},"nodeType":"YulExpressionStatement","src":"19648:12:4"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"19549:117:4"},{"body":{"nodeType":"YulBlock","src":"19761:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19778:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19781:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19771:6:4"},"nodeType":"YulFunctionCall","src":"19771:12:4"},"nodeType":"YulExpressionStatement","src":"19771:12:4"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"19672:117:4"},{"body":{"nodeType":"YulBlock","src":"19884:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19901:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19904:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19894:6:4"},"nodeType":"YulFunctionCall","src":"19894:12:4"},"nodeType":"YulExpressionStatement","src":"19894:12:4"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"19795:117:4"},{"body":{"nodeType":"YulBlock","src":"20007:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20024:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20027:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20017:6:4"},"nodeType":"YulFunctionCall","src":"20017:12:4"},"nodeType":"YulExpressionStatement","src":"20017:12:4"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"19918:117:4"},{"body":{"nodeType":"YulBlock","src":"20089:54:4","statements":[{"nodeType":"YulAssignment","src":"20099:38:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20117:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"20124:2:4","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20113:3:4"},"nodeType":"YulFunctionCall","src":"20113:14:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20133:2:4","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20129:3:4"},"nodeType":"YulFunctionCall","src":"20129:7:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20109:3:4"},"nodeType":"YulFunctionCall","src":"20109:28:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20099:6:4"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20072:5:4","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20082:6:4","type":""}],"src":"20041:102:4"},{"body":{"nodeType":"YulBlock","src":"20255:67:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20277:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"20285:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20273:3:4"},"nodeType":"YulFunctionCall","src":"20273:14:4"},{"hexValue":"496e76616c696420636f76657261676520616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"20289:25:4","type":"","value":"Invalid coverage amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20266:6:4"},"nodeType":"YulFunctionCall","src":"20266:49:4"},"nodeType":"YulExpressionStatement","src":"20266:49:4"}]},"name":"store_literal_in_memory_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20247:6:4","type":""}],"src":"20149:173:4"},{"body":{"nodeType":"YulBlock","src":"20434:119:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20456:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"20464:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20452:3:4"},"nodeType":"YulFunctionCall","src":"20452:14:4"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"20468:34:4","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20445:6:4"},"nodeType":"YulFunctionCall","src":"20445:58:4"},"nodeType":"YulExpressionStatement","src":"20445:58:4"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20524:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"20532:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20520:3:4"},"nodeType":"YulFunctionCall","src":"20520:15:4"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"20537:8:4","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20513:6:4"},"nodeType":"YulFunctionCall","src":"20513:33:4"},"nodeType":"YulExpressionStatement","src":"20513:33:4"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20426:6:4","type":""}],"src":"20328:225:4"},{"body":{"nodeType":"YulBlock","src":"20665:60:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20687:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"20695:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20683:3:4"},"nodeType":"YulFunctionCall","src":"20683:14:4"},{"hexValue":"506f6c696379206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"20699:18:4","type":"","value":"Policy not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20676:6:4"},"nodeType":"YulFunctionCall","src":"20676:42:4"},"nodeType":"YulExpressionStatement","src":"20676:42:4"}]},"name":"store_literal_in_memory_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20657:6:4","type":""}],"src":"20559:166:4"},{"body":{"nodeType":"YulBlock","src":"20837:67:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20859:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"20867:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20855:3:4"},"nodeType":"YulFunctionCall","src":"20855:14:4"},{"hexValue":"436c61696d20616c72656164792070726f636573736564","kind":"string","nodeType":"YulLiteral","src":"20871:25:4","type":"","value":"Claim already processed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20848:6:4"},"nodeType":"YulFunctionCall","src":"20848:49:4"},"nodeType":"YulExpressionStatement","src":"20848:49:4"}]},"name":"store_literal_in_memory_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20829:6:4","type":""}],"src":"20731:173:4"},{"body":{"nodeType":"YulBlock","src":"21016:72:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21038:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"21046:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21034:3:4"},"nodeType":"YulFunctionCall","src":"21034:14:4"},{"hexValue":"496e73756666696369656e74207072656d69756d207061796d656e74","kind":"string","nodeType":"YulLiteral","src":"21050:30:4","type":"","value":"Insufficient premium payment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21027:6:4"},"nodeType":"YulFunctionCall","src":"21027:54:4"},"nodeType":"YulExpressionStatement","src":"21027:54:4"}]},"name":"store_literal_in_memory_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21008:6:4","type":""}],"src":"20910:178:4"},{"body":{"nodeType":"YulBlock","src":"21200:64:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21222:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"21230:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21218:3:4"},"nodeType":"YulFunctionCall","src":"21218:14:4"},{"hexValue":"506f6c696379206973206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"21234:22:4","type":"","value":"Policy is not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21211:6:4"},"nodeType":"YulFunctionCall","src":"21211:46:4"},"nodeType":"YulExpressionStatement","src":"21211:46:4"}]},"name":"store_literal_in_memory_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21192:6:4","type":""}],"src":"21094:170:4"},{"body":{"nodeType":"YulBlock","src":"21376:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21398:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"21406:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21394:3:4"},"nodeType":"YulFunctionCall","src":"21394:14:4"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21410:34:4","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21387:6:4"},"nodeType":"YulFunctionCall","src":"21387:58:4"},"nodeType":"YulExpressionStatement","src":"21387:58:4"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21368:6:4","type":""}],"src":"21270:182:4"},{"body":{"nodeType":"YulBlock","src":"21564:73:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21586:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"21594:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21582:3:4"},"nodeType":"YulFunctionCall","src":"21582:14:4"},{"hexValue":"436c61696d20616d6f756e74206578636565647320636f766572616765","kind":"string","nodeType":"YulLiteral","src":"21598:31:4","type":"","value":"Claim amount exceeds coverage"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21575:6:4"},"nodeType":"YulFunctionCall","src":"21575:55:4"},"nodeType":"YulExpressionStatement","src":"21575:55:4"}]},"name":"store_literal_in_memory_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21556:6:4","type":""}],"src":"21458:179:4"},{"body":{"nodeType":"YulBlock","src":"21749:75:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21771:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"21779:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21767:3:4"},"nodeType":"YulFunctionCall","src":"21767:14:4"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"21783:33:4","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21760:6:4"},"nodeType":"YulFunctionCall","src":"21760:57:4"},"nodeType":"YulExpressionStatement","src":"21760:57:4"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21741:6:4","type":""}],"src":"21643:181:4"},{"body":{"nodeType":"YulBlock","src":"21888:62:4","statements":[{"body":{"nodeType":"YulBlock","src":"21922:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"21924:16:4"},"nodeType":"YulFunctionCall","src":"21924:18:4"},"nodeType":"YulExpressionStatement","src":"21924:18:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21911:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"21918:1:4","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21908:2:4"},"nodeType":"YulFunctionCall","src":"21908:12:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21901:6:4"},"nodeType":"YulFunctionCall","src":"21901:20:4"},"nodeType":"YulIf","src":"21898:46:4"}]},"name":"validator_assert_t_enum$_ClaimStatus_$207","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21881:5:4","type":""}],"src":"21830:120:4"},{"body":{"nodeType":"YulBlock","src":"21999:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"22056:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22065:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22068:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22058:6:4"},"nodeType":"YulFunctionCall","src":"22058:12:4"},"nodeType":"YulExpressionStatement","src":"22058:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22022:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22047:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22029:17:4"},"nodeType":"YulFunctionCall","src":"22029:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22019:2:4"},"nodeType":"YulFunctionCall","src":"22019:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22012:6:4"},"nodeType":"YulFunctionCall","src":"22012:43:4"},"nodeType":"YulIf","src":"22009:63:4"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21992:5:4","type":""}],"src":"21956:122:4"},{"body":{"nodeType":"YulBlock","src":"22124:76:4","statements":[{"body":{"nodeType":"YulBlock","src":"22178:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22187:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22190:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22180:6:4"},"nodeType":"YulFunctionCall","src":"22180:12:4"},"nodeType":"YulExpressionStatement","src":"22180:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22147:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22169:5:4"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22154:14:4"},"nodeType":"YulFunctionCall","src":"22154:21:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22144:2:4"},"nodeType":"YulFunctionCall","src":"22144:32:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22137:6:4"},"nodeType":"YulFunctionCall","src":"22137:40:4"},"nodeType":"YulIf","src":"22134:60:4"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22117:5:4","type":""}],"src":"22084:116:4"},{"body":{"nodeType":"YulBlock","src":"22249:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"22306:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22315:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22318:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22308:6:4"},"nodeType":"YulFunctionCall","src":"22308:12:4"},"nodeType":"YulExpressionStatement","src":"22308:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22272:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22297:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22279:17:4"},"nodeType":"YulFunctionCall","src":"22279:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22269:2:4"},"nodeType":"YulFunctionCall","src":"22269:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22262:6:4"},"nodeType":"YulFunctionCall","src":"22262:43:4"},"nodeType":"YulIf","src":"22259:63:4"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22242:5:4","type":""}],"src":"22206:122:4"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_ClaimStatus_$207_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ClaimStatus_$207_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_ClaimStatus_$207__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_ClaimStatus_$207_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_enum$_ClaimStatus_$207_t_string_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_enum$_ClaimStatus_$207_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_ClaimStatus_$207(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ClaimStatus_$207(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_ClaimStatus_$207_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ClaimStatus_$207(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0ae63ea4ca9fb7a83d36ab0a1fa64793b6ac82061cdd52a1ee4ca01c3d0328c8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid coverage amount\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_42cb6adf2172fcd554545cbd0fc5a0dbec5675a8a159c6f6ca5b7e35bd632f79(memPtr) {\n\n        mstore(add(memPtr, 0), \"Policy not found\")\n\n    }\n\n    function store_literal_in_memory_49dea5ad47e4b4a8e741022bbde0f91413b0cb7f3d15b1515bae7c7b15a11cde(memPtr) {\n\n        mstore(add(memPtr, 0), \"Claim already processed\")\n\n    }\n\n    function store_literal_in_memory_94c883244898b2ef300949156ea78e9c524ab5bc5021a4d0763c5111f4225c8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient premium payment\")\n\n    }\n\n    function store_literal_in_memory_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Policy is not active\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d127a05725074a1e4ab793719817191247381101c2a7fad39472e89d897bc700(memPtr) {\n\n        mstore(add(memPtr, 0), \"Claim amount exceeds coverage\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_assert_t_enum$_ClaimStatus_$207(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100f75760003560e01c8063715018a61161008a578063c1260c9a11610059578063c1260c9a14610307578063ca9748ea14610323578063d52c1bea14610360578063f2fde38b1461038b576100fe565b8063715018a6146102585780638da5cb5b1461026f5780639efa0aa91461029a578063a888c2cd146102c5576100fe565b80633d36adc5116100c65780633d36adc5146101945780634b930487146101d75780634efa8f17146102025780635eff17351461022d576100fe565b806306964de7146101005780632925993d1461012957806335446def146101545780633ccfd60b1461017d576100fe565b366100fe57005b005b34801561010c57600080fd5b50610127600480360381019061012291906114b4565b6103b4565b005b34801561013557600080fd5b5061013e61065c565b60405161014b9190611829565b60405180910390f35b34801561016057600080fd5b5061017b60048036038101906101769190611474565b61066a565b005b34801561018957600080fd5b506101926108ff565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190611407565b6109cb565b6040516101ce9796959493929190611844565b60405180910390f35b3480156101e357600080fd5b506101ec610a57565b6040516101f99190611829565b60405180910390f35b34801561020e57600080fd5b50610217610a5c565b6040516102249190611829565b60405180910390f35b34801561023957600080fd5b50610242610a62565b60405161024f9190611829565b60405180910390f35b34801561026457600080fd5b5061026d610a67565b005b34801561027b57600080fd5b50610284610aef565b60405161029191906116d3565b60405180910390f35b3480156102a657600080fd5b506102af610b18565b6040516102bc9190611829565b60405180910390f35b3480156102d157600080fd5b506102ec60048036038101906102e79190611447565b610b26565b6040516102fe969594939291906118dc565b60405180910390f35b610321600480360381019061031c9190611447565b610bf7565b005b34801561032f57600080fd5b5061034a60048036038101906103459190611407565b610f31565b6040516103579190611829565b60405180910390f35b34801561036c57600080fd5b50610375610f62565b6040516103829190611829565b60405180910390f35b34801561039757600080fd5b506103b260048036038101906103ad91906113da565b610f68565b005b600260015414156103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190611809565b60405180910390fd5b6002600181905550600061040d84611060565b90508060060160009054906101000a900460ff16610460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610457906117a9565b60405180910390fd5b80600201548311156104a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049e906117e9565b60405180910390fd5b60006040518060c001604052806006548152602001868152602001858152602001428152602001600060028111156104e2576104e1611c84565b5b8152602001848152509050806003600060065481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600281111561055657610555611c84565b5b021790555060a0820151816005019080519060200190610577929190611288565b50905050600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006549080600181540180825580915050600190039060005260206000200160009091909190915055600660008154809291906105f690611bdd565b919050555080600001513373ffffffffffffffffffffffffffffffffffffffff167ffe6542b2c812f9d65d4ea6f1d81bcd2e556c05bf33b6697ab14179aa484cfcc2866040516106469190611829565b60405180910390a3505060018081905550505050565b69021e19e0c9bab240000081565b61067261115d565b73ffffffffffffffffffffffffffffffffffffffff16610690610aef565b73ffffffffffffffffffffffffffffffffffffffff16146106e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106dd906117c9565b60405180910390fd5b6002600154141561072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390611809565b60405180910390fd5b60026001819055506000600360008481526020019081526020016000209050600061075a8260010154611060565b9050600060028111156107705761076f611c84565b5b8260040160009054906101000a900460ff16600281111561079457610793611c84565b5b146107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90611769565b60405180910390fd5b821561087b5760018260040160006101000a81548160ff0219169083600281111561080257610801611c84565b5b02179055508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc83600201549081150290604051600060405180830381858888f19350505050158015610875573d6000803e3d6000fd5b506108a9565b60028260040160006101000a81548160ff021916908360028111156108a3576108a2611c84565b5b02179055505b837f71b2546244a774fd0b97d37ceaac0b5f5fc83f468abb1877f67fcfca93a20c408360040160009054906101000a900460ff166040516108ea91906116ee565b60405180910390a25050600180819055505050565b61090761115d565b73ffffffffffffffffffffffffffffffffffffffff16610925610aef565b73ffffffffffffffffffffffffffffffffffffffff161461097b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610972906117c9565b60405180910390fd5b610983610aef565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156109c8573d6000803e3d6000fd5b50565b600260205281600052604060002081815481106109e757600080fd5b9060005260206000209060070201600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16905087565b600581565b60065481565b601481565b610a6f61115d565b73ffffffffffffffffffffffffffffffffffffffff16610a8d610aef565b73ffffffffffffffffffffffffffffffffffffffff1614610ae3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ada906117c9565b60405180910390fd5b610aed6000611165565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b69d3c21bcecceda100000081565b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff1690806005018054610b7490611b7a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba090611b7a565b8015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b5050505050905086565b60026001541415610c3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3490611809565b60405180910390fd5b600260018190555069021e19e0c9bab24000008110158015610c69575069d3c21bcecceda10000008111155b610ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9f90611709565b60405180910390fd5b6000610cb382611229565b905080341015610cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cef90611789565b60405180910390fd5b60006040518060e0016040528060055481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020014281526020016301e1338042610d4b91906119b6565b8152602001600115158152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908315150217905550505060056000815480929190610e7090611bdd565b919050555080600001513373ffffffffffffffffffffffffffffffffffffffff167f8b8961810a39fd56d36e421278c7737795a230b372ac246eb46d37eae370db5f8585604051610ec29291906118b3565b60405180910390a381341115610f25573373ffffffffffffffffffffffffffffffffffffffff166108fc8334610ef89190611a97565b9081150290604051600060405180830381858888f19350505050158015610f23573d6000803e3d6000fd5b505b50506001808190555050565b60046020528160005260406000208181548110610f4d57600080fd5b90600052602060002001600091509150505481565b60055481565b610f7061115d565b73ffffffffffffffffffffffffffffffffffffffff16610f8e610aef565b73ffffffffffffffffffffffffffffffffffffffff1614610fe4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdb906117c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90611729565b60405180910390fd5b61105d81611165565b50565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b818054905081101561111c57838282815481106110c7576110c6611ce2565b5b9060005260206000209060070201600001541415611109578181815481106110f2576110f1611ce2565b5b906000526020600020906007020192505050611158565b808061111490611bdd565b9150506110a7565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114f90611749565b60405180910390fd5b919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008069d3c21bcecceda1000000600560146112459190611a97565b846112509190611a3d565b61125a9190611a0c565b600561126691906119b6565b9050606481846112769190611a3d565b6112809190611a0c565b915050919050565b82805461129490611b7a565b90600052602060002090601f0160209004810192826112b657600085556112fd565b82601f106112cf57805160ff19168380011785556112fd565b828001600101855582156112fd579182015b828111156112fc5782518255916020019190600101906112e1565b5b50905061130a919061130e565b5090565b5b8082111561132757600081600090555060010161130f565b5090565b600061133e61133984611969565b611944565b90508281526020810184848401111561135a57611359611d45565b5b611365848285611b38565b509392505050565b60008135905061137c81611f10565b92915050565b60008135905061139181611f27565b92915050565b600082601f8301126113ac576113ab611d40565b5b81356113bc84826020860161132b565b91505092915050565b6000813590506113d481611f3e565b92915050565b6000602082840312156113f0576113ef611d4f565b5b60006113fe8482850161136d565b91505092915050565b6000806040838503121561141e5761141d611d4f565b5b600061142c8582860161136d565b925050602061143d858286016113c5565b9150509250929050565b60006020828403121561145d5761145c611d4f565b5b600061146b848285016113c5565b91505092915050565b6000806040838503121561148b5761148a611d4f565b5b6000611499858286016113c5565b92505060206114aa85828601611382565b9150509250929050565b6000806000606084860312156114cd576114cc611d4f565b5b60006114db868287016113c5565b93505060206114ec868287016113c5565b925050604084013567ffffffffffffffff81111561150d5761150c611d4a565b5b61151986828701611397565b9150509250925092565b61152c81611acb565b82525050565b61153b81611add565b82525050565b61154a81611b26565b82525050565b600061155b8261199a565b61156581856119a5565b9350611575818560208601611b47565b61157e81611d54565b840191505092915050565b60006115966017836119a5565b91506115a182611d65565b602082019050919050565b60006115b96026836119a5565b91506115c482611d8e565b604082019050919050565b60006115dc6010836119a5565b91506115e782611ddd565b602082019050919050565b60006115ff6017836119a5565b915061160a82611e06565b602082019050919050565b6000611622601c836119a5565b915061162d82611e2f565b602082019050919050565b60006116456014836119a5565b915061165082611e58565b602082019050919050565b60006116686020836119a5565b915061167382611e81565b602082019050919050565b600061168b601d836119a5565b915061169682611eaa565b602082019050919050565b60006116ae601f836119a5565b91506116b982611ed3565b602082019050919050565b6116cd81611b1c565b82525050565b60006020820190506116e86000830184611523565b92915050565b60006020820190506117036000830184611541565b92915050565b6000602082019050818103600083015261172281611589565b9050919050565b60006020820190508181036000830152611742816115ac565b9050919050565b60006020820190508181036000830152611762816115cf565b9050919050565b60006020820190508181036000830152611782816115f2565b9050919050565b600060208201905081810360008301526117a281611615565b9050919050565b600060208201905081810360008301526117c281611638565b9050919050565b600060208201905081810360008301526117e28161165b565b9050919050565b600060208201905081810360008301526118028161167e565b9050919050565b60006020820190508181036000830152611822816116a1565b9050919050565b600060208201905061183e60008301846116c4565b92915050565b600060e082019050611859600083018a6116c4565b6118666020830189611523565b61187360408301886116c4565b61188060608301876116c4565b61188d60808301866116c4565b61189a60a08301856116c4565b6118a760c0830184611532565b98975050505050505050565b60006040820190506118c860008301856116c4565b6118d560208301846116c4565b9392505050565b600060c0820190506118f160008301896116c4565b6118fe60208301886116c4565b61190b60408301876116c4565b61191860608301866116c4565b6119256080830185611541565b81810360a08301526119378184611550565b9050979650505050505050565b600061194e61195f565b905061195a8282611bac565b919050565b6000604051905090565b600067ffffffffffffffff82111561198457611983611d11565b5b61198d82611d54565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006119c182611b1c565b91506119cc83611b1c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a0157611a00611c26565b5b828201905092915050565b6000611a1782611b1c565b9150611a2283611b1c565b925082611a3257611a31611c55565b5b828204905092915050565b6000611a4882611b1c565b9150611a5383611b1c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a8c57611a8b611c26565b5b828202905092915050565b6000611aa282611b1c565b9150611aad83611b1c565b925082821015611ac057611abf611c26565b5b828203905092915050565b6000611ad682611afc565b9050919050565b60008115159050919050565b6000819050611af782611efc565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b3182611ae9565b9050919050565b82818337600083830152505050565b60005b83811015611b65578082015181840152602081019050611b4a565b83811115611b74576000848401525b50505050565b60006002820490506001821680611b9257607f821691505b60208210811415611ba657611ba5611cb3565b5b50919050565b611bb582611d54565b810181811067ffffffffffffffff82111715611bd457611bd3611d11565b5b80604052505050565b6000611be882611b1c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c1b57611c1a611c26565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f496e76616c696420636f76657261676520616d6f756e74000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f506f6c696379206e6f7420666f756e6400000000000000000000000000000000600082015250565b7f436c61696d20616c72656164792070726f636573736564000000000000000000600082015250565b7f496e73756666696369656e74207072656d69756d207061796d656e7400000000600082015250565b7f506f6c696379206973206e6f7420616374697665000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f436c61696d20616d6f756e74206578636565647320636f766572616765000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60038110611f0d57611f0c611c84565b5b50565b611f1981611acb565b8114611f2457600080fd5b50565b611f3081611add565b8114611f3b57600080fd5b50565b611f4781611b1c565b8114611f5257600080fd5b5056fea2646970667358221220beddc1e5df7bafbd8d1c85a6e1f462afd46c3581bfb46db357616958803d997264736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC1260C9A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC1260C9A EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xCA9748EA EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD52C1BEA EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38B JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x9EFA0AA9 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x2C5 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3D36ADC5 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x3D36ADC5 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x4B930487 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4EFA8F17 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x5EFF1735 EQ PUSH2 0x22D JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6964DE7 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x2925993D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x35446DEF EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x17D JUMPI PUSH2 0xFE JUMP JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0xA67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x375 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x40D DUP5 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x457 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP4 GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x4E2 JUMPI PUSH2 0x4E1 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x556 JUMPI PUSH2 0x555 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x577 SWAP3 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5F6 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x0 ADD MLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFE6542B2C812F9D65D4EA6F1D81BCD2E556C05BF33B6697AB14179AA484CFCC2 DUP7 PUSH1 0x40 MLOAD PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP2 JUMP JUMPDEST PUSH2 0x672 PUSH2 0x115D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x690 PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DD SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x75A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x770 JUMPI PUSH2 0x76F PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x794 JUMPI PUSH2 0x793 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CB SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x87B JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x802 JUMPI PUSH2 0x801 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 PUSH1 0x2 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x875 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8A3 JUMPI PUSH2 0x8A2 PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST DUP4 PUSH32 0x71B2546244A774FD0B97D37CEAAC0B5F5FC83F468ABB1877F67FCFCA93A20C40 DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x907 PUSH2 0x115D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x925 PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x983 PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0xA6F PUSH2 0x115D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA8D PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAED PUSH1 0x0 PUSH2 0x1165 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0xB74 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBA0 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBC2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBD0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC34 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH10 0x21E19E0C9BAB2400000 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xC69 JUMPI POP PUSH10 0xD3C21BCECCEDA1000000 DUP2 GT ISZERO JUMPDEST PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9F SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP3 PUSH2 0x1229 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEF SWAP1 PUSH2 0x1789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1E13380 TIMESTAMP PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE70 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x0 ADD MLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8B8961810A39FD56D36E421278C7737795A230B372AC246EB46D37EAE370DB5F DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEC2 SWAP3 SWAP2 SWAP1 PUSH2 0x18B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP2 CALLVALUE GT ISZERO PUSH2 0xF25 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 CALLVALUE PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF70 PUSH2 0x115D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF8E PUSH2 0xAEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDB SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104B SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x105D DUP2 PUSH2 0x1165 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x111C JUMPI DUP4 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10C7 JUMPI PUSH2 0x10C6 PUSH2 0x1CE2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x1109 JUMPI DUP2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10F2 JUMPI PUSH2 0x10F1 PUSH2 0x1CE2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP3 POP POP POP PUSH2 0x1158 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1114 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10A7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x5 PUSH1 0x14 PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST DUP5 PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x125A SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP5 PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1294 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x12B6 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x12FD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x12CF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x12FD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x12FD JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x12FC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12E1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x130E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1327 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x130F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133E PUSH2 0x1339 DUP5 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x1D45 JUMP JUMPDEST JUMPDEST PUSH2 0x1365 DUP5 DUP3 DUP6 PUSH2 0x1B38 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137C DUP2 PUSH2 0x1F10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1391 DUP2 PUSH2 0x1F27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13AC JUMPI PUSH2 0x13AB PUSH2 0x1D40 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x132B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D4 DUP2 PUSH2 0x1F3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FE DUP5 DUP3 DUP6 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x141E JUMPI PUSH2 0x141D PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x142C DUP6 DUP3 DUP7 ADD PUSH2 0x136D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143D DUP6 DUP3 DUP7 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH2 0x145C PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x146B DUP5 DUP3 DUP6 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148B JUMPI PUSH2 0x148A PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1499 DUP6 DUP3 DUP7 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14AA DUP6 DUP3 DUP7 ADD PUSH2 0x1382 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x1D4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14DB DUP7 DUP3 DUP8 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14EC DUP7 DUP3 DUP8 ADD PUSH2 0x13C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x150D JUMPI PUSH2 0x150C PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH2 0x1519 DUP7 DUP3 DUP8 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x152C DUP2 PUSH2 0x1ACB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x153B DUP2 PUSH2 0x1ADD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x154A DUP2 PUSH2 0x1B26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155B DUP3 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x1565 DUP2 DUP6 PUSH2 0x19A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1575 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0x157E DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1596 PUSH1 0x17 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15A1 DUP3 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 PUSH1 0x26 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C4 DUP3 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DC PUSH1 0x10 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E7 DUP3 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FF PUSH1 0x17 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x160A DUP3 PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1622 PUSH1 0x1C DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x162D DUP3 PUSH2 0x1E2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1645 PUSH1 0x14 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1650 DUP3 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1668 PUSH1 0x20 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1673 DUP3 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168B PUSH1 0x1D DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1696 DUP3 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AE PUSH1 0x1F DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x16B9 DUP3 PUSH2 0x1ED3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CD DUP2 PUSH2 0x1B1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1703 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1541 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1722 DUP2 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1742 DUP2 PUSH2 0x15AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1762 DUP2 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1782 DUP2 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A2 DUP2 PUSH2 0x1615 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17C2 DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17E2 DUP2 PUSH2 0x165B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1802 DUP2 PUSH2 0x167E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1822 DUP2 PUSH2 0x16A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1859 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x1866 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1523 JUMP JUMPDEST PUSH2 0x1873 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x1880 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x188D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x189A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x18A7 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1532 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18C8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x18D5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x18F1 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x18FE PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x190B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x1918 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x1925 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1541 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1937 DUP2 DUP5 PUSH2 0x1550 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194E PUSH2 0x195F JUMP JUMPDEST SWAP1 POP PUSH2 0x195A DUP3 DUP3 PUSH2 0x1BAC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1984 JUMPI PUSH2 0x1983 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST PUSH2 0x198D DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C1 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x19CC DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A01 JUMPI PUSH2 0x1A00 PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A22 DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x1C55 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A48 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A53 DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1A8C JUMPI PUSH2 0x1A8B PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA2 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAD DUP4 PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1AC0 JUMPI PUSH2 0x1ABF PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD6 DUP3 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1AF7 DUP3 PUSH2 0x1EFC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B31 DUP3 PUSH2 0x1AE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B65 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B4A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B92 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BA6 JUMPI PUSH2 0x1BA5 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB5 DUP3 PUSH2 0x1D54 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BD4 JUMPI PUSH2 0x1BD3 PUSH2 0x1D11 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE8 DUP3 PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1C1B JUMPI PUSH2 0x1C1A PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F76657261676520616D6F756E74000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F6C696379206E6F7420666F756E6400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436C61696D20616C72656164792070726F636573736564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207072656D69756D207061796D656E7400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F6C696379206973206E6F7420616374697665000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436C61696D20616D6F756E74206578636565647320636F766572616765000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x1C84 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F19 DUP2 PUSH2 0x1ACB JUMP JUMPDEST DUP2 EQ PUSH2 0x1F24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F30 DUP2 PUSH2 0x1ADD JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F47 DUP2 PUSH2 0x1B1C JUMP JUMPDEST DUP2 EQ PUSH2 0x1F52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xDD 0xC1 0xE5 0xDF PUSH28 0xAFBD8D1C85A6E1F462AFD46C3581BFB46DB357616958803D99726473 PUSH16 0x6C634300080700330000000000000000 ","sourceMap":"174:5758:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3063:995;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1129:53;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4109:656;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5718:104;;;;;;;;;;;;;:::i;:::-;;845:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1282:50;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1065:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1344:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1203:55:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;899:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1863:1172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;944:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1031:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3063:995:3;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;3246:21:3::1;3270:25;3286:8;3270:15;:25::i;:::-;3246:49;;3348:6;:15;;;;;;;;;;;;3340:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3434:6;:21;;;3419:11;:36;;3398:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;3546:21;3570:251;;;;;;;;3594:12;;3570:251;;;;3630:8;3570:251;;;;3665:11;3570:251;;;;3706:15;3570:251;;;;3743:19;3570:251;;;;;;;;:::i;:::-;;;;;;3794:16;3570:251;;::::0;3546:275:::1;;3878:8;3855:6;:20;3862:12;;3855:20;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3896:10;:22;3907:10;3896:22;;;;;;;;;;;;;;;3924:12;;3896:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3947:12;;:14;;;;;;;;;:::i;:::-;;;;;;4026:8;:11;;;4014:10;3999:52;;;4039:11;3999:52;;;;;;:::i;:::-;;;;;;;;3209:849;;1701:1:1::0;2628:7;:22;;;;3063:995:3;;;:::o;1129:53::-;1168:14;1129:53;:::o;4109:656::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1:1::1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;4227:19:3::2;4249:6;:15;4256:7;4249:15;;;;;;;;;;;4227:37;;4274:21;4298:31;4314:5;:14;;;4298:15;:31::i;:::-;4274:55;;4364:19;4348:35;;;;;;;;:::i;:::-;;:5;:12;;;;;;;;;;;;:35;;;;;;;;:::i;:::-;;;4340:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4426:7;4422:262;;;4464:20;4449:5;:12;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4559:6;:19;;;;;;;;;;;;4551:37;;:56;4589:5;:17;;;4551:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;4422:262;;;4653:20;4638:5;:12;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4422:262;4736:7;4721:37;4745:5;:12;;;;;;;;;;;;4721:37;;;;;;:::i;:::-;;;;;;;;4217:548;;1701:1:1::1;2628:7:::0;:22:::1;;;;4109:656:3::0;;:::o;5718:104::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5775:7:3::1;:5;:7::i;:::-;5767:25;;:48;5793:21;5767:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;5718:104::o:0;845:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1282:50::-;1331:1;1282:50;:::o;1065:27::-;;;;:::o;1344:51::-;1393:2;1344:51;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1203:55:3:-;1242:16;1203:55;:::o;899:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1863:1172::-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1168:14:3::1;2008;:30;;:77;;;;;1242:16;2055:14;:30;;2008:77;1987:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;2200:15;2218:32;2235:14;2218:16;:32::i;:::-;2200:50;;2281:7;2268:9;:20;;2260:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2361:23;2387:295;;;;;;;;2412:13;;2387:295;;;;2453:10;2387:295;;;;;;2493:14;2387:295;;;;2530:7;2387:295;;;;2562:15;2387:295;;;;2618:8;2600:15;:26;;;;:::i;:::-;2387:295;;;;2667:4;2387:295;;;;::::0;2361:321:::1;;2717:12;:24;2730:10;2717:24;;;;;;;;;;;;;;;2747:9;2717:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2767:13;;:15;;;;;;;;;:::i;:::-;;;;;;2848:9;:12;;;2836:10;2820:66;;;2862:14;2878:7;2820:66;;;;;;;:::i;:::-;;;;;;;;2946:7;2934:9;:19;2930:99;;;2977:10;2969:28;;:49;3010:7;2998:9;:19;;;;:::i;:::-;2969:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2930:99;1941:1094;;1701:1:1::0;2628:7;:22;;;;1863:1172:3;:::o;944:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1031:28::-;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;4818:363:3:-;4898:14;4924:25;4952:12;:24;4965:10;4952:24;;;;;;;;;;;;;;;4924:52;;4991:9;4986:153;5010:8;:15;;;;5006:1;:19;4986:153;;;5068:8;5050;5059:1;5050:11;;;;;;;;:::i;:::-;;;;;;;;;;;;:14;;;:26;5046:83;;;5103:8;5112:1;5103:11;;;;;;;;:::i;:::-;;;;;;;;;;;;5096:18;;;;;;5046:83;5027:3;;;;;:::i;:::-;;;;4986:153;;;;5148:26;;;;;;;;;;:::i;:::-;;;;;;;;4818:363;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;5237:429:3:-;5324:7;5440:25;1242:16;1331:1;1393:2;5526:47;;;;:::i;:::-;5508:14;:66;;;;:::i;:::-;5507:83;;;;:::i;:::-;1331:1;5468:123;;;;:::i;:::-;5440:151;;5656:3;5635:17;5618:14;:34;;;;:::i;:::-;5617:42;;;;:::i;:::-;5610:49;;;5237:429;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:4:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;570:133::-;613:5;651:6;638:20;629:29;;667:30;691:5;667:30;:::i;:::-;570:133;;;;:::o;723:340::-;779:5;828:3;821:4;813:6;809:17;805:27;795:122;;836:79;;:::i;:::-;795:122;953:6;940:20;978:79;1053:3;1045:6;1038:4;1030:6;1026:17;978:79;:::i;:::-;969:88;;785:278;723:340;;;;:::o;1069:139::-;1115:5;1153:6;1140:20;1131:29;;1169:33;1196:5;1169:33;:::i;:::-;1069:139;;;;:::o;1214:329::-;1273:6;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1214:329;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:468::-;2429:6;2437;2486:2;2474:9;2465:7;2461:23;2457:32;2454:119;;;2492:79;;:::i;:::-;2454:119;2612:1;2637:53;2682:7;2673:6;2662:9;2658:22;2637:53;:::i;:::-;2627:63;;2583:117;2739:2;2765:50;2807:7;2798:6;2787:9;2783:22;2765:50;:::i;:::-;2755:60;;2710:115;2364:468;;;;;:::o;2838:799::-;2925:6;2933;2941;2990:2;2978:9;2969:7;2965:23;2961:32;2958:119;;;2996:79;;:::i;:::-;2958:119;3116:1;3141:53;3186:7;3177:6;3166:9;3162:22;3141:53;:::i;:::-;3131:63;;3087:117;3243:2;3269:53;3314:7;3305:6;3294:9;3290:22;3269:53;:::i;:::-;3259:63;;3214:118;3399:2;3388:9;3384:18;3371:32;3430:18;3422:6;3419:30;3416:117;;;3452:79;;:::i;:::-;3416:117;3557:63;3612:7;3603:6;3592:9;3588:22;3557:63;:::i;:::-;3547:73;;3342:288;2838:799;;;;;:::o;3643:118::-;3730:24;3748:5;3730:24;:::i;:::-;3725:3;3718:37;3643:118;;:::o;3767:109::-;3848:21;3863:5;3848:21;:::i;:::-;3843:3;3836:34;3767:109;;:::o;3882:157::-;3982:50;4026:5;3982:50;:::i;:::-;3977:3;3970:63;3882:157;;:::o;4045:364::-;4133:3;4161:39;4194:5;4161:39;:::i;:::-;4216:71;4280:6;4275:3;4216:71;:::i;:::-;4209:78;;4296:52;4341:6;4336:3;4329:4;4322:5;4318:16;4296:52;:::i;:::-;4373:29;4395:6;4373:29;:::i;:::-;4368:3;4364:39;4357:46;;4137:272;4045:364;;;;:::o;4415:366::-;4557:3;4578:67;4642:2;4637:3;4578:67;:::i;:::-;4571:74;;4654:93;4743:3;4654:93;:::i;:::-;4772:2;4767:3;4763:12;4756:19;;4415:366;;;:::o;4787:::-;4929:3;4950:67;5014:2;5009:3;4950:67;:::i;:::-;4943:74;;5026:93;5115:3;5026:93;:::i;:::-;5144:2;5139:3;5135:12;5128:19;;4787:366;;;:::o;5159:::-;5301:3;5322:67;5386:2;5381:3;5322:67;:::i;:::-;5315:74;;5398:93;5487:3;5398:93;:::i;:::-;5516:2;5511:3;5507:12;5500:19;;5159:366;;;:::o;5531:::-;5673:3;5694:67;5758:2;5753:3;5694:67;:::i;:::-;5687:74;;5770:93;5859:3;5770:93;:::i;:::-;5888:2;5883:3;5879:12;5872:19;;5531:366;;;:::o;5903:::-;6045:3;6066:67;6130:2;6125:3;6066:67;:::i;:::-;6059:74;;6142:93;6231:3;6142:93;:::i;:::-;6260:2;6255:3;6251:12;6244:19;;5903:366;;;:::o;6275:::-;6417:3;6438:67;6502:2;6497:3;6438:67;:::i;:::-;6431:74;;6514:93;6603:3;6514:93;:::i;:::-;6632:2;6627:3;6623:12;6616:19;;6275:366;;;:::o;6647:::-;6789:3;6810:67;6874:2;6869:3;6810:67;:::i;:::-;6803:74;;6886:93;6975:3;6886:93;:::i;:::-;7004:2;6999:3;6995:12;6988:19;;6647:366;;;:::o;7019:::-;7161:3;7182:67;7246:2;7241:3;7182:67;:::i;:::-;7175:74;;7258:93;7347:3;7258:93;:::i;:::-;7376:2;7371:3;7367:12;7360:19;;7019:366;;;:::o;7391:::-;7533:3;7554:67;7618:2;7613:3;7554:67;:::i;:::-;7547:74;;7630:93;7719:3;7630:93;:::i;:::-;7748:2;7743:3;7739:12;7732:19;;7391:366;;;:::o;7763:118::-;7850:24;7868:5;7850:24;:::i;:::-;7845:3;7838:37;7763:118;;:::o;7887:222::-;7980:4;8018:2;8007:9;8003:18;7995:26;;8031:71;8099:1;8088:9;8084:17;8075:6;8031:71;:::i;:::-;7887:222;;;;:::o;8115:248::-;8221:4;8259:2;8248:9;8244:18;8236:26;;8272:84;8353:1;8342:9;8338:17;8329:6;8272:84;:::i;:::-;8115:248;;;;:::o;8369:419::-;8535:4;8573:2;8562:9;8558:18;8550:26;;8622:9;8616:4;8612:20;8608:1;8597:9;8593:17;8586:47;8650:131;8776:4;8650:131;:::i;:::-;8642:139;;8369:419;;;:::o;8794:::-;8960:4;8998:2;8987:9;8983:18;8975:26;;9047:9;9041:4;9037:20;9033:1;9022:9;9018:17;9011:47;9075:131;9201:4;9075:131;:::i;:::-;9067:139;;8794:419;;;:::o;9219:::-;9385:4;9423:2;9412:9;9408:18;9400:26;;9472:9;9466:4;9462:20;9458:1;9447:9;9443:17;9436:47;9500:131;9626:4;9500:131;:::i;:::-;9492:139;;9219:419;;;:::o;9644:::-;9810:4;9848:2;9837:9;9833:18;9825:26;;9897:9;9891:4;9887:20;9883:1;9872:9;9868:17;9861:47;9925:131;10051:4;9925:131;:::i;:::-;9917:139;;9644:419;;;:::o;10069:::-;10235:4;10273:2;10262:9;10258:18;10250:26;;10322:9;10316:4;10312:20;10308:1;10297:9;10293:17;10286:47;10350:131;10476:4;10350:131;:::i;:::-;10342:139;;10069:419;;;:::o;10494:::-;10660:4;10698:2;10687:9;10683:18;10675:26;;10747:9;10741:4;10737:20;10733:1;10722:9;10718:17;10711:47;10775:131;10901:4;10775:131;:::i;:::-;10767:139;;10494:419;;;:::o;10919:::-;11085:4;11123:2;11112:9;11108:18;11100:26;;11172:9;11166:4;11162:20;11158:1;11147:9;11143:17;11136:47;11200:131;11326:4;11200:131;:::i;:::-;11192:139;;10919:419;;;:::o;11344:::-;11510:4;11548:2;11537:9;11533:18;11525:26;;11597:9;11591:4;11587:20;11583:1;11572:9;11568:17;11561:47;11625:131;11751:4;11625:131;:::i;:::-;11617:139;;11344:419;;;:::o;11769:::-;11935:4;11973:2;11962:9;11958:18;11950:26;;12022:9;12016:4;12012:20;12008:1;11997:9;11993:17;11986:47;12050:131;12176:4;12050:131;:::i;:::-;12042:139;;11769:419;;;:::o;12194:222::-;12287:4;12325:2;12314:9;12310:18;12302:26;;12338:71;12406:1;12395:9;12391:17;12382:6;12338:71;:::i;:::-;12194:222;;;;:::o;12422:874::-;12677:4;12715:3;12704:9;12700:19;12692:27;;12729:71;12797:1;12786:9;12782:17;12773:6;12729:71;:::i;:::-;12810:72;12878:2;12867:9;12863:18;12854:6;12810:72;:::i;:::-;12892;12960:2;12949:9;12945:18;12936:6;12892:72;:::i;:::-;12974;13042:2;13031:9;13027:18;13018:6;12974:72;:::i;:::-;13056:73;13124:3;13113:9;13109:19;13100:6;13056:73;:::i;:::-;13139;13207:3;13196:9;13192:19;13183:6;13139:73;:::i;:::-;13222:67;13284:3;13273:9;13269:19;13260:6;13222:67;:::i;:::-;12422:874;;;;;;;;;;:::o;13302:332::-;13423:4;13461:2;13450:9;13446:18;13438:26;;13474:71;13542:1;13531:9;13527:17;13518:6;13474:71;:::i;:::-;13555:72;13623:2;13612:9;13608:18;13599:6;13555:72;:::i;:::-;13302:332;;;;;:::o;13640:892::-;13906:4;13944:3;13933:9;13929:19;13921:27;;13958:71;14026:1;14015:9;14011:17;14002:6;13958:71;:::i;:::-;14039:72;14107:2;14096:9;14092:18;14083:6;14039:72;:::i;:::-;14121;14189:2;14178:9;14174:18;14165:6;14121:72;:::i;:::-;14203;14271:2;14260:9;14256:18;14247:6;14203:72;:::i;:::-;14285:86;14366:3;14355:9;14351:19;14342:6;14285:86;:::i;:::-;14419:9;14413:4;14409:20;14403:3;14392:9;14388:19;14381:49;14447:78;14520:4;14511:6;14447:78;:::i;:::-;14439:86;;13640:892;;;;;;;;;:::o;14538:129::-;14572:6;14599:20;;:::i;:::-;14589:30;;14628:33;14656:4;14648:6;14628:33;:::i;:::-;14538:129;;;:::o;14673:75::-;14706:6;14739:2;14733:9;14723:19;;14673:75;:::o;14754:308::-;14816:4;14906:18;14898:6;14895:30;14892:56;;;14928:18;;:::i;:::-;14892:56;14966:29;14988:6;14966:29;:::i;:::-;14958:37;;15050:4;15044;15040:15;15032:23;;14754:308;;;:::o;15068:99::-;15120:6;15154:5;15148:12;15138:22;;15068:99;;;:::o;15173:169::-;15257:11;15291:6;15286:3;15279:19;15331:4;15326:3;15322:14;15307:29;;15173:169;;;;:::o;15348:305::-;15388:3;15407:20;15425:1;15407:20;:::i;:::-;15402:25;;15441:20;15459:1;15441:20;:::i;:::-;15436:25;;15595:1;15527:66;15523:74;15520:1;15517:81;15514:107;;;15601:18;;:::i;:::-;15514:107;15645:1;15642;15638:9;15631:16;;15348:305;;;;:::o;15659:185::-;15699:1;15716:20;15734:1;15716:20;:::i;:::-;15711:25;;15750:20;15768:1;15750:20;:::i;:::-;15745:25;;15789:1;15779:35;;15794:18;;:::i;:::-;15779:35;15836:1;15833;15829:9;15824:14;;15659:185;;;;:::o;15850:348::-;15890:7;15913:20;15931:1;15913:20;:::i;:::-;15908:25;;15947:20;15965:1;15947:20;:::i;:::-;15942:25;;16135:1;16067:66;16063:74;16060:1;16057:81;16052:1;16045:9;16038:17;16034:105;16031:131;;;16142:18;;:::i;:::-;16031:131;16190:1;16187;16183:9;16172:20;;15850:348;;;;:::o;16204:191::-;16244:4;16264:20;16282:1;16264:20;:::i;:::-;16259:25;;16298:20;16316:1;16298:20;:::i;:::-;16293:25;;16337:1;16334;16331:8;16328:34;;;16342:18;;:::i;:::-;16328:34;16387:1;16384;16380:9;16372:17;;16204:191;;;;:::o;16401:96::-;16438:7;16467:24;16485:5;16467:24;:::i;:::-;16456:35;;16401:96;;;:::o;16503:90::-;16537:7;16580:5;16573:13;16566:21;16555:32;;16503:90;;;:::o;16599:141::-;16651:7;16680:5;16669:16;;16686:48;16728:5;16686:48;:::i;:::-;16599:141;;;:::o;16746:126::-;16783:7;16823:42;16816:5;16812:54;16801:65;;16746:126;;;:::o;16878:77::-;16915:7;16944:5;16933:16;;16878:77;;;:::o;16961:141::-;17024:9;17057:39;17090:5;17057:39;:::i;:::-;17044:52;;16961:141;;;:::o;17108:154::-;17192:6;17187:3;17182;17169:30;17254:1;17245:6;17240:3;17236:16;17229:27;17108:154;;;:::o;17268:307::-;17336:1;17346:113;17360:6;17357:1;17354:13;17346:113;;;17445:1;17440:3;17436:11;17430:18;17426:1;17421:3;17417:11;17410:39;17382:2;17379:1;17375:10;17370:15;;17346:113;;;17477:6;17474:1;17471:13;17468:101;;;17557:1;17548:6;17543:3;17539:16;17532:27;17468:101;17317:258;17268:307;;;:::o;17581:320::-;17625:6;17662:1;17656:4;17652:12;17642:22;;17709:1;17703:4;17699:12;17730:18;17720:81;;17786:4;17778:6;17774:17;17764:27;;17720:81;17848:2;17840:6;17837:14;17817:18;17814:38;17811:84;;;17867:18;;:::i;:::-;17811:84;17632:269;17581:320;;;:::o;17907:281::-;17990:27;18012:4;17990:27;:::i;:::-;17982:6;17978:40;18120:6;18108:10;18105:22;18084:18;18072:10;18069:34;18066:62;18063:88;;;18131:18;;:::i;:::-;18063:88;18171:10;18167:2;18160:22;17950:238;17907:281;;:::o;18194:233::-;18233:3;18256:24;18274:5;18256:24;:::i;:::-;18247:33;;18302:66;18295:5;18292:77;18289:103;;;18372:18;;:::i;:::-;18289:103;18419:1;18412:5;18408:13;18401:20;;18194:233;;;:::o;18433:180::-;18481:77;18478:1;18471:88;18578:4;18575:1;18568:15;18602:4;18599:1;18592:15;18619:180;18667:77;18664:1;18657:88;18764:4;18761:1;18754:15;18788:4;18785:1;18778:15;18805:180;18853:77;18850:1;18843:88;18950:4;18947:1;18940:15;18974:4;18971:1;18964:15;18991:180;19039:77;19036:1;19029:88;19136:4;19133:1;19126:15;19160:4;19157:1;19150:15;19177:180;19225:77;19222:1;19215:88;19322:4;19319:1;19312:15;19346:4;19343:1;19336:15;19363:180;19411:77;19408:1;19401:88;19508:4;19505:1;19498:15;19532:4;19529:1;19522:15;19549:117;19658:1;19655;19648:12;19672:117;19781:1;19778;19771:12;19795:117;19904:1;19901;19894:12;19918:117;20027:1;20024;20017:12;20041:102;20082:6;20133:2;20129:7;20124:2;20117:5;20113:14;20109:28;20099:38;;20041:102;;;:::o;20149:173::-;20289:25;20285:1;20277:6;20273:14;20266:49;20149:173;:::o;20328:225::-;20468:34;20464:1;20456:6;20452:14;20445:58;20537:8;20532:2;20524:6;20520:15;20513:33;20328:225;:::o;20559:166::-;20699:18;20695:1;20687:6;20683:14;20676:42;20559:166;:::o;20731:173::-;20871:25;20867:1;20859:6;20855:14;20848:49;20731:173;:::o;20910:178::-;21050:30;21046:1;21038:6;21034:14;21027:54;20910:178;:::o;21094:170::-;21234:22;21230:1;21222:6;21218:14;21211:46;21094:170;:::o;21270:182::-;21410:34;21406:1;21398:6;21394:14;21387:58;21270:182;:::o;21458:179::-;21598:31;21594:1;21586:6;21582:14;21575:55;21458:179;:::o;21643:181::-;21783:33;21779:1;21771:6;21767:14;21760:57;21643:181;:::o;21830:120::-;21918:1;21911:5;21908:12;21898:46;;21924:18;;:::i;:::-;21898:46;21830:120;:::o;21956:122::-;22029:24;22047:5;22029:24;:::i;:::-;22022:5;22019:35;22009:63;;22068:1;22065;22058:12;22009:63;21956:122;:::o;22084:116::-;22154:21;22169:5;22154:21;:::i;:::-;22147:5;22144:32;22134:60;;22190:1;22187;22180:12;22134:60;22084:116;:::o;22206:122::-;22279:24;22297:5;22279:24;:::i;:::-;22272:5;22269:35;22259:63;;22318:1;22315;22308:12;22259:63;22206:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1615000","executionCost":"infinite","totalCost":"infinite"},"external":{"":"197","MAX_COVERAGE()":"396","MAX_PREMIUM_PERCENTAGE()":"418","MIN_COVERAGE()":"375","MIN_PREMIUM_PERCENTAGE()":"374","claimCounter()":"2496","claims(uint256)":"infinite","owner()":"2567","policyCounter()":"2495","processClaim(uint256,bool)":"infinite","purchasePolicy(uint256)":"infinite","renounceOwnership()":"30397","submitClaim(uint256,uint256,string)":"infinite","transferOwnership(address)":"30811","userClaims(address,uint256)":"infinite","userPolicies(address,uint256)":"infinite","withdraw()":"infinite"},"internal":{"_findUserPolicy(uint256)":"infinite","calculatePremium(uint256)":"infinite"}},"methodIdentifiers":{"MAX_COVERAGE()":"9efa0aa9","MAX_PREMIUM_PERCENTAGE()":"5eff1735","MIN_COVERAGE()":"2925993d","MIN_PREMIUM_PERCENTAGE()":"4b930487","claimCounter()":"4efa8f17","claims(uint256)":"a888c2cd","owner()":"8da5cb5b","policyCounter()":"d52c1bea","processClaim(uint256,bool)":"35446def","purchasePolicy(uint256)":"c1260c9a","renounceOwnership()":"715018a6","submitClaim(uint256,uint256,string)":"06964de7","transferOwnership(address)":"f2fde38b","userClaims(address,uint256)":"ca9748ea","userPolicies(address,uint256)":"3d36adc5","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum HealthInsurance.ClaimStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ClaimProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"}],\"name\":\"PolicyPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_COVERAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PREMIUM_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_COVERAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PREMIUM_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submissionDate\",\"type\":\"uint256\"},{\"internalType\":\"enum HealthInsurance.ClaimStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"medicalDocuments\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approve\",\"type\":\"bool\"}],\"name\":\"processClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"}],\"name\":\"purchasePolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"medicalDocuments\",\"type\":\"string\"}],\"name\":\"submitClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPolicies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HealthInsurance.sol\":\"HealthInsurance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/HealthInsurance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract HealthInsurance is Ownable, ReentrancyGuard {\\n    // Struct to represent an insurance policy\\n    struct Policy {\\n        uint256 id;\\n        address policyholder;\\n        uint256 coverageAmount;\\n        uint256 premium;\\n        uint256 startDate;\\n        uint256 endDate;\\n        bool isActive;\\n    }\\n\\n    // Struct to represent a claim\\n    struct Claim {\\n        uint256 id;\\n        uint256 policyId;\\n        uint256 claimAmount;\\n        uint256 submissionDate;\\n        ClaimStatus status;\\n        string medicalDocuments;\\n    }\\n\\n    // Enum for claim status\\n    enum ClaimStatus {\\n        Pending,\\n        Approved,\\n        Rejected\\n    }\\n\\n    // Mappings\\n    mapping(address => Policy[]) public userPolicies;\\n    mapping(uint256 => Claim) public claims;\\n    mapping(address => uint256[]) public userClaims;\\n\\n    // Policy and Claim Counters\\n    uint256 public policyCounter;\\n    uint256 public claimCounter;\\n\\n    // Insurance plan details\\n    uint256 public constant MIN_COVERAGE = 10000 * 10**18; // 10,000 USDC\\n    uint256 public constant MAX_COVERAGE = 1000000 * 10**18; // 1,000,000 USDC\\n    uint256 public constant MIN_PREMIUM_PERCENTAGE = 5; // 5%\\n    uint256 public constant MAX_PREMIUM_PERCENTAGE = 20; // 20%\\n\\n    // Events\\n    event PolicyPurchased(\\n        address indexed policyholder, \\n        uint256 indexed policyId, \\n        uint256 coverageAmount, \\n        uint256 premium\\n    );\\n    event ClaimSubmitted(\\n        address indexed policyholder, \\n        uint256 indexed claimId, \\n        uint256 claimAmount\\n    );\\n    event ClaimProcessed(\\n        uint256 indexed claimId, \\n        ClaimStatus status\\n    );\\n\\n    // Purchase a new health insurance policy\\n    function purchasePolicy(uint256 coverageAmount) external payable nonReentrant {\\n        // Validate coverage amount\\n        require(\\n            coverageAmount >= MIN_COVERAGE && \\n            coverageAmount <= MAX_COVERAGE, \\n            \\\"Invalid coverage amount\\\"\\n        );\\n\\n        // Calculate premium (simplified calculation)\\n        uint256 premium = calculatePremium(coverageAmount);\\n        require(msg.value >= premium, \\\"Insufficient premium payment\\\");\\n\\n        // Create new policy\\n        Policy memory newPolicy = Policy({\\n            id: policyCounter,\\n            policyholder: msg.sender,\\n            coverageAmount: coverageAmount,\\n            premium: premium,\\n            startDate: block.timestamp,\\n            endDate: block.timestamp + 365 days, // 1 year policy\\n            isActive: true\\n        });\\n\\n        // Store policy\\n        userPolicies[msg.sender].push(newPolicy);\\n        policyCounter++;\\n\\n        // Emit event\\n        emit PolicyPurchased(msg.sender, newPolicy.id, coverageAmount, premium);\\n\\n        // Refund excess payment\\n        if (msg.value > premium) {\\n            payable(msg.sender).transfer(msg.value - premium);\\n        }\\n    }\\n\\n    // Submit a claim\\n    function submitClaim(\\n        uint256 policyId, \\n        uint256 claimAmount, \\n        string memory medicalDocuments\\n    ) external nonReentrant {\\n        // Find the policy\\n        Policy storage policy = _findUserPolicy(policyId);\\n        \\n        // Validate claim\\n        require(policy.isActive, \\\"Policy is not active\\\");\\n        require(\\n            claimAmount <= policy.coverageAmount, \\n            \\\"Claim amount exceeds coverage\\\"\\n        );\\n\\n        // Create claim\\n        Claim memory newClaim = Claim({\\n            id: claimCounter,\\n            policyId: policyId,\\n            claimAmount: claimAmount,\\n            submissionDate: block.timestamp,\\n            status: ClaimStatus.Pending,\\n            medicalDocuments: medicalDocuments\\n        });\\n\\n        // Store claim\\n        claims[claimCounter] = newClaim;\\n        userClaims[msg.sender].push(claimCounter);\\n        claimCounter++;\\n\\n        // Emit event\\n        emit ClaimSubmitted(msg.sender, newClaim.id, claimAmount);\\n    }\\n\\n    // Process a claim (only by owner/admin)\\n    function processClaim(\\n        uint256 claimId, \\n        bool approve\\n    ) external onlyOwner nonReentrant {\\n        Claim storage claim = claims[claimId];\\n        Policy storage policy = _findUserPolicy(claim.policyId);\\n\\n        require(claim.status == ClaimStatus.Pending, \\\"Claim already processed\\\");\\n\\n        if (approve) {\\n            claim.status = ClaimStatus.Approved;\\n            // Transfer claim amount to policyholder\\n            payable(policy.policyholder).transfer(claim.claimAmount);\\n        } else {\\n            claim.status = ClaimStatus.Rejected;\\n        }\\n\\n        // Emit event\\n        emit ClaimProcessed(claimId, claim.status);\\n    }\\n\\n    // Internal function to find user's policy\\n    function _findUserPolicy(\\n        uint256 policyId\\n    ) internal view returns (Policy storage) {\\n        Policy[] storage policies = userPolicies[msg.sender];\\n        for (uint256 i = 0; i < policies.length; i++) {\\n            if (policies[i].id == policyId) {\\n                return policies[i];\\n            }\\n        }\\n        revert(\\\"Policy not found\\\");\\n    }\\n\\n    // Calculate premium based on coverage amount\\n    function calculatePremium(\\n        uint256 coverageAmount\\n    ) internal pure returns (uint256) {\\n        // Simplified premium calculation\\n        // Premium is between 5-20% of coverage amount\\n        uint256 premiumPercentage = MIN_PREMIUM_PERCENTAGE + \\n            ((coverageAmount * (MAX_PREMIUM_PERCENTAGE - MIN_PREMIUM_PERCENTAGE)) / MAX_COVERAGE);\\n        \\n        return (coverageAmount * premiumPercentage) / 100;\\n    }\\n\\n    // Withdraw contract balance (only owner)\\n    function withdraw() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    // Fallback and receive functions\\n    receive() external payable {}\\n    fallback() external payable {}\\n}\",\"keccak256\":\"0xafead4f96dabbd4f9b6385f19ee0021a860d670dcf7c7ce9d0a89718f94ef276\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":115,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":213,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"userPolicies","offset":0,"slot":"2","type":"t_mapping(t_address,t_array(t_struct(Policy)189_storage)dyn_storage)"},{"astId":218,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"claims","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(Claim)203_storage)"},{"astId":223,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"userClaims","offset":0,"slot":"4","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":225,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"policyCounter","offset":0,"slot":"5","type":"t_uint256"},{"astId":227,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"claimCounter","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(Policy)189_storage)dyn_storage":{"base":"t_struct(Policy)189_storage","encoding":"dynamic_array","label":"struct HealthInsurance.Policy[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(ClaimStatus)207":{"encoding":"inplace","label":"enum HealthInsurance.ClaimStatus","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_struct(Policy)189_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct HealthInsurance.Policy[])","numberOfBytes":"32","value":"t_array(t_struct(Policy)189_storage)dyn_storage"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_uint256,t_struct(Claim)203_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct HealthInsurance.Claim)","numberOfBytes":"32","value":"t_struct(Claim)203_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Claim)203_storage":{"encoding":"inplace","label":"struct HealthInsurance.Claim","members":[{"astId":191,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":193,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"policyId","offset":0,"slot":"1","type":"t_uint256"},{"astId":195,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"claimAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":197,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"submissionDate","offset":0,"slot":"3","type":"t_uint256"},{"astId":200,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"status","offset":0,"slot":"4","type":"t_enum(ClaimStatus)207"},{"astId":202,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"medicalDocuments","offset":0,"slot":"5","type":"t_string_storage"}],"numberOfBytes":"192"},"t_struct(Policy)189_storage":{"encoding":"inplace","label":"struct HealthInsurance.Policy","members":[{"astId":176,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":178,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"policyholder","offset":0,"slot":"1","type":"t_address"},{"astId":180,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"coverageAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":182,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"premium","offset":0,"slot":"3","type":"t_uint256"},{"astId":184,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"startDate","offset":0,"slot":"4","type":"t_uint256"},{"astId":186,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"endDate","offset":0,"slot":"5","type":"t_uint256"},{"astId":188,"contract":"contracts/HealthInsurance.sol:HealthInsurance","label":"isActive","offset":0,"slot":"6","type":"t_bool"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}